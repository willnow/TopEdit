<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CUIT.Model.Tde</name>
    </assembly>
    <members>
        <member name="T:CSR.CUIT.Model.Tde.Logic.LogicConstant">
            <summary>
            <para>提供结构体需要的所有常量字段</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.MAX_SIDE_PER_STA">
            <summary>
            <para>车站的最大股道设备数量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.MAX_ENTRY_PER_STA">
            <summary>
            <para>车站的最大出入口设备数量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.MAX_STA_INPUT_CNT">
            <summary>
            <para>车站的最大表示码位数量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.MAX_STA_OUTPUT_CNT">
            <summary>
            <para>车站的最大控制码位数量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.INPUT_TRAIN_TYPE1">
            <summary>
            人工车
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.INPUT_TRAIN_TYPE2">
            <summary>
            头码车
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.INPUT_TRAIN_TYPE3">
            <summary>
            特殊人工车
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.INPUT_TRAIN_TYPE4">
            <summary>
            计划车
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.INPUT_ZONE_EMERGENCY">
            <summary>
            联锁控
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.INPUT_ZONE_CTC">
            <summary>
            中心控
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.INPUT_ZONE_CONTROL">
            <summary>
            车站控
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.OUTPUT_ZONE_CI_TO_ATS">
            <summary>
            ATS向联锁申请控制权的控制码位
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.LogicConstant.TdeEncoding">
            <summary>
            <para>System.Text.Encoding.Default</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Logic.DeviceLink.Deserialize(System.IO.BinaryReader@)">
            <summary>
            <para>读取二进制流，初始化类字段。</para>
            <para>前置条件：</para>
            <para>    cBinaryReader 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cBinaryReader">二进制流</param>
            <returns>
            <para>true：字段初始化完成</para>
            <para>false：字段初始化未完成</para>
            </returns>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Logic.DeviceLink.RtuId">
            <summary>
            <para>获得和设置码位表所属的设备集中站索引。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.InputCode.m_handle">
            <summary>
            <para>图元的码位。初始值为0。</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Logic.InputCode.Type">
            <summary>
            <para>车站类型</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Logic.InputCode.Handle">
            <summary>
            <para>车站句柄</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Logic.InputIndex">
            <summary>
            <para>记录表示码位索引信息</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Logic.InputIndex.BitType">
            <summary>
            <para>码位类型</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Logic.InputIndex.BitHandle">
            <summary>
            <para>表示码位句柄</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Logic.OutputIndex">
            <summary>
            <para>记录控制码位索引信息</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Logic.OutputIndex.BitType">
            <summary>
            <para>码位类型</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Logic.OutputIndex.BitHandle">
            <summary>
            <para>控制码位句柄</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Route.DeviceInputCount">
            <summary>
            <para>表示码位数量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Route.DeviceOutputCount">
            <summary>
            <para>控制码位数量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Route.Output">
            <summary>
            <para>某一具体数据结构中表示码位的数据块，最大长度为LogicConstant的MAX_STA_OUTPUT_CNT值。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Signal.Station">
            <summary>
            <para>车站码</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Signal.Input">
            <summary>
            <para>某一具体数据结构中表示码位的数据块，最大长度为LogicConstant的MAX_STA_INPUT_CNT值。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Circuit.RtuID">
            <summary>
            <para>获得图元所属的设备集中站的ID。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Circuit.Name">
            <summary>
            <para>车站名称</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Logic.Sta">
            <summary>
            <para>记录ATS车站信息</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.Type">
            <summary>
            <para>车站类型</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.RtuID">
            <summary>
            <para>集中站码</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.Handle">
            <summary>
            <para>车站句柄</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.Station">
            <summary>
            <para>车站码</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.Name">
            <summary>
            <para>车站名称</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.Mode">
            <summary>
            <para>终端模式</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.Cycle">
            <summary>
            <para>折返模式</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.DeviceInputCount">
            <summary>
            <para>表示码位数量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.Input">
            <summary>
            <para>某一具体数据结构中表示码位的数据块，最大长度为LogicConstant的MAX_STA_INPUT_CNT值。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.DeviceOutputCount">
            <summary>
            <para>控制码位数量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.Output">
            <summary>
            <para>某一具体数据结构中表示码位的数据块，最大长度为LogicConstant的MAX_STA_OUTPUT_CNT值。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.entry">
            <summary>
            <para>车站所有出入口设备信息，最大长度为LogicConstant的MAX_ENTRY_PER_STA值。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Logic.Sta.side">
            <summary>
            <para>车站所有股道设备信息，最大长度为LogicConstant的MAX_SIDE_PER_STA值。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Rtu">
            <summary>
            <para>定义与设备集中站相关的属性和操作。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.IDraw">
            <summary>
            <para>定义绘制的方法。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetDevice(System.Byte,System.UInt16)">
            <summary>
            <para>根据设备类型和设备索引查找设备的IDevice设备对象。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="deviceType">设备类型</param>
            <param name="handle">设备索引</param>
            <returns>
            <para>null：没有找到对象</para>
            <para>IDevice对象：找到了对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetDevice(CSR.CUIT.Model.Tde.Logic.DeviceIndex)">
            <summary>
            <para>根据设备类型和设备索引查找设备的IDevice设备对象。</para>
            <para>前置条件：</para>
            <para>    deviceIndex 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="deviceIndex">包含设备类型和设备索引的类</param>
            <returns>
            <para>null：没有找到对象</para>
            <para>IDevice对象：找到了对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetIcon(System.UInt16)">
            <summary>
            <para>返回m_iconCollection列表中第handle-1位的对象。</para>
            <para>前置条件：</para>
            <para>    m_iconCollection不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handle">索引</param>
            <returns>
            <para>IIcon对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetPlatform(System.UInt16)">
            <summary>
            <para>获取站台设备列表中指定设备句柄的站台设备。</para>
            <para>前置条件：</para>
            <para>    m_deviceCollection不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handle">索引</param>
            <returns>
            <para>返回站台设备列表中指定设备句柄的站台设备。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetSwitch(System.UInt16)">
            <summary>
            <para>获取道岔设备列表中指定设备句柄的道岔设备。</para>
            <para>前置条件：</para>
            <para>    m_deviceCollection不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handle">索引</param>
            <returns>
            <para>返回道岔设备列表中指定设备句柄的道岔设备。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetTrack(System.UInt16)">
            <summary>
            <para>获取逻辑轨道设备列表中指定设备句柄的逻辑轨道设备。</para>
            <para>前置条件：</para>
            <para>    m_deviceCollection不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handle">索引</param>
            <returns>
            <para>返回逻辑轨道设备列表中指定设备句柄的逻辑轨道设备。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetWindow(System.UInt16)">
            <summary>
            <para>获取车次窗设备列表中指定设备句柄的车次窗设备。</para>
            <para>前置条件：</para>
            <para>    m_deviceCollection不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handle">索引</param>
            <returns>
            <para>返回车次窗设备列表中指定设备句柄的车次窗设备。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetOutputCode(System.UInt16)">
            <summary>
            获取输出控制码位列表中指定句柄的输出控制码位对象
            </summary>
            <param name="outputHandle">输出码位句柄</param>
            <returns>输出控制码位对象</returns>
            <remarks>
            <para> 蒋湘宁 2013-12-21  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetControlCode(System.UInt16)">
            <summary>
            <para>根据控制码位类型，查找设备集中站的控制码位。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="controlType">控制码位类型</param>
            <returns>
            <para>0：没有找到控制码位类型对应的控制码位</para>
            <para>非0：控制码位数值</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetIndicationCode(System.UInt16)">
            <summary>
            <para>根据表示码位类型，查找设备集中站的表示码位。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="inputType">表示码位类型</param>
            <returns>
            <para>0：没有找到表示码位类型对应的表示码位</para>
            <para>非0：表示码位数值</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetBitStatus(System.UInt16)">
            <summary>
            <para>获取指定码位句柄的码位状态</para>
            <para>前置条件：</para>
            <para>    m_bitmap不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="bitHandle">码位句柄</param>
            <returns>
            <para>返回指定码位句柄的码位状态。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetBitStatusByStringHandle(System.String)">
            <summary>
            获取指定码位句柄的码位状态
            </summary>
            <param name="bitHandle">码位句柄</param>
            <returns>返回指定码位句柄的码位状态</returns>
            <remarks>
            <para> 蒋湘宁 2013-12-21  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetStationByID(System.Byte)">
            <summary>
            <para>获取指定车站编号的车站设备</para>
            <para>前置条件：</para>
            <para>    m_deviceCollection不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="stationID">指定车站编号</param>
            <returns>
            <para>返回定车站编号的车站设备。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetDeviceIconByIconSubType(System.Byte,System.UInt16,CSR.CUIT.Model.Tde.EmIconSubType)">
            <summary>
            <para>获得指定设备下指定EmIconSubType类型的图元列表。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="deviceType">设备类型</param>
            <param name="handle">设备索引</param>
            <param name="iconType">图元子类型</param>
            <returns>
            <para>图元列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.UpdateTsrSpeedIcon(System.Byte,System.UInt16,CSR.CUIT.Model.Tde.EmIconSubType,System.Byte,System.Boolean)">
            <summary>
            <para>更新指定的临时限速速度图元的显示状态。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="deviceType">设备类型</param>
            <param name="handle">设备索引</param>
            <param name="iconType">图元子类型</param>
            <param name="speed">临时限速速度值</param>
            <param name="status">图元的是否显示</param>
            <returns>
            <para>需要刷新显示的图元列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.InitBitmap(System.Byte[],CSR.CUIT.Model.Tde.EmUpdateBitmapType)">
            <summary>
            <para>初始化状态码位表。</para>
            <para>前置条件：</para>
            <para>    bitmapBuff 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="bitmapBuff">用于初始化状态码位表的Byte数组</param>
            <param name="type">待更新的码位类型</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-31  增加初始化码位表时的分类处理</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.UpdateBitmap(CSR.CUIT.Model.Tde.BitmapUpdateItem)">
            <summary>
            <para>更新状态码位表。</para>
            <para>查找在显示上与更新码位相关联的图标，并根据码位最新状态和逻辑表，计算出图标的最新显示颜色并刷新。</para>
            <para>前置条件：item!=null</para>
            <para>后置条件：无</para>
            </summary>
            <param name="item">待更新的码位。</param>
            <returns>
            <para>IIcon列表：更新成功，返回需要刷新显示的图标的列表。</para>
            <para>null：输入参数handle指定的位置超出了状态码位表的范围。</para>
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.UpdateBitmap(System.Collections.ObjectModel.ReadOnlyCollection{CSR.CUIT.Model.Tde.BitmapUpdateItem})">
            <summary>
            更新状态码位表
            </summary>
            <param name="itemList"></param>
            <returns>
            <para>IIcon列表：更新成功，返回需要刷新显示的图标的列表。</para>
            <para>null：输入参数handle指定的位置超出了状态码位表的范围。</para>
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.ResetBitmap(CSR.CUIT.Model.Tde.EmUpdateBitmapType)">
            <summary>
            <para>清空码位表，并将其置于无效状态。</para>
            <para>根据码位最新状态和逻辑表，计算出图标的最新显示颜色并刷新。</para>
            <para>前置条件：无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="type">待更新的码位类型</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.GetBitmapLength">
            <summary>
            <para>获取码位表长度</para>
            <para>前置条件：</para>
            <para>    m_bitmap不为空</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>返回码位表长度。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.IllegalAlterExist(System.UInt16@)">
            <summary>
            <para>判断码位表是否存在非法修改（预期外修改）</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="crcValue">当前码位表的CRC值</param>
            <returns>
            <para>正确处理返回值，且返回当前码位表的CRC值。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.Init">
            <summary>
            <para>初始化集中站</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.AddDevice(CSR.CUIT.Model.Tde.Device.IDevice)">
            <summary>
            <para>在设备列表中增加设备</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.AddIcon(CSR.CUIT.Model.Tde.Icon.IIcon)">
            <summary>
            <para>往m_iconCollection列表中添加一个新的IIcon对象</para>
            <para>前置条件：</para>
            <para>    iIcon 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="iIcon">IIcon对象</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.ResetStatus">
            <summary>
            <para>重置站场状态</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            <para>实现IDraw接口。在指定区域绘制图元。</para>
            <para>前置条件：</para>
            <para>    cGraphics cRect 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">封装一个GDI+绘图图面</param>
            <param name="cRect">绘制范围</param>
            <returns>
            <para>无</para>
            </returns>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_iconCollection">
            <summary>
            <para>该设备集中站管理的所有图元的列表</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_deviceCollection">
            <summary>
            <para>该设备集中站管理的所有设备的列表</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_alarmCollection">
            <summary>
            <para>该设备集中站管理的所有报警设备的列表</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_bAlive">
            <summary>
            <para>该设备集中站是否激活</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_bVisible">
            <summary>
            <para>该设备集中站是否显示</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_cRtuGroup">
            <summary>
            <para>该设备集中站所属的RtuGroup对象</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_head">
            <summary>
            <para>基础数据中该设备集中站的基本信息</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_movement">
            <summary>
            <para>该设备集中站的平移向量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_zoom">
            <summary>
            <para>该设备集中站的缩放向量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_nStatus">
            <summary>
            <para>该设备集中站的状态</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_DefaultBoundsRect">
            <summary>
            <para>表示站场图的原始边界</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_bitmap">
            <summary>
            <para>该设备集中站维护的码位表。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_bitmapIconMapplingList">
            <summary>
            <para>该设备集中站的所有码位与所有图元的关系映射表。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_outputCodeList">
            <summary>
            该设备集中站的输出控制码位列表
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Rtu.m_inputCodeList">
            <summary>
            该设备集中站的输入控制码位列表
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Rtu.IsSame(CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>判断当前设备集中站对象与指定的设备集中站对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定设备集中站对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.Alive">
            <summary>
            <para>设置和返回当前集中站是否激活的状态</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.Name">
            <summary>
            <para>获取集中站名称</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.RtuID">
            <summary>
            <para>获取集中站编号</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.Type">
            <summary>
            <para>获取集中站类型</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.DeviceAlarmCollection">
            <summary>
            <para>获取报警设备集合</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.DeviceStationCollection">
            <summary>
            <para>获取车站设备集合</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.RtuGroup">
            <summary>
            <para>获取当前集中站所属的集中站组</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.BitmapIconMapplingList">
            <summary>
            <para>获取该设备集中站的所有码位与所有图元的关系映射表</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.DefaultBoundsRect">
            <summary>
            <para>获取站场图的原始边界</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.Head">
            <summary>
            <para>设置和获取基础数据中当前集中站的基本信息</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.Movement">
            <summary>
            <para>获取站场图的平移向量</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.Status">
            <summary>
            <para>设置和获取当前集中站的状态</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.Visible">
            <summary>
            <para>获得或设置图元的可见状态。</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.Zoom">
            <summary>
            <para>获取站场图的缩放向量</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.IconCollection">
            <summary>
            <para>获取图标集合</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.BoundsRect">
            <summary>
            <para>实现IDraw接口。根据图元的默认大小和当前站场图的缩放比例进行计算，获得图元的实际大小。</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Rtu.DeviceCollection">
            <summary>
            <para>获取设备集合</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.IconRectangle">
            <summary>
            <para>定义与矩形图元相关的属性和操作。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.IIcon">
            <summary>
            <para>定义与图元相关的属性和操作。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_buttonIndex">
            <summary>
            <para>图元关联按钮索引。初始值为0。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_currentColor">
            <summary>
            <para>图元当前的显示色。初始值为null。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_defaultColor">
            <summary>
            <para>图元在配置文件中配置的默认颜色。初始值为null。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_deviceIndex">
            <summary>
            <para>图元关联的设备索引。初始值为null。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_flashState">
            <summary>
            <para>表示当前正在闪烁的图元正处于可见还是不可见的状态。初始值为false。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_flashing">
            <summary>
            <para>图元是否闪烁。初始值为false。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_handle">
            <summary>
            <para>图元的码位。初始值为0。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_iconState">
            <summary>
            <para>图元的状态。初始值为EmIconState.Dead</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_iconType">
            <summary>
            <para>图元类型。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_level">
            <summary>
            <para>指示图元在站场图上绘制的先后顺序，m_level值小的先绘，值大的后绘。初始值为0。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_logicTable">
            <summary>
            <para>图元关联的逻辑表。初始值为null。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_rtu">
            <summary>
            <para>图元所属的设备集中站。初始值为null。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_iconSubType">
            <summary>
            <para>图元的子类型。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IIcon.m_visible">
            <summary>
            <para>图元的当前显示状态。初始值为true。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IIcon.Initialize(System.Collections.Generic.List{System.String},CSR.CUIT.Model.Tde.LogicTable)">
            <summary>
            <para>根据输入参数，初始化类成员。</para>
            <para>前置条件：</para>
            <para>    attributeCollection 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="attributeCollection">从配置文件中读取出来的数据初始化字符串序列</param>
            <param name="logicTable">逻辑表</param>
            <returns>
            <para>true：初始化成功</para>
            <para>false：初始化失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IIcon.Intersect(System.Drawing.Point)">
            <summary>
            <para>判断输入点是否位于图元的所在区域内。该方法由每个IIcon子类具体实现。</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IIcon.UpdateColor">
            <summary>
            <para>根据逻辑表进行计算，更新图元的当前颜色。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IIcon.UpdateColorToDefault">
            <summary>
            <para>将当前图元颜色重置为默认色</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-28  增加null时的容错处理</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IIcon.ResetStatus">
            <summary>
            <para>重置当前图元的状态</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-15  修复BUG 231</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IIcon.DrawIcon(System.Drawing.Graphics)">
            <summary>
            <para>绘制图元的方法，由IIcon子类实现其绘制自身的方法。</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IIcon.InitializeAttribute(System.Collections.Generic.List{System.String})">
            <summary>
            <para>根据输入参数初始化成员，由IIcon子类具体实现。初始化顺序遵循数据配置文件中的顺序。</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IIcon.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            <para>实现IDraw接口。在指定区域绘制图元。</para>
            <para>前置条件：</para>
            <para>    cGraphics cRect 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">封装一个GDI+绘图图面</param>
            <param name="cRect">绘制范围</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IIcon.IsSame(CSR.CUIT.Model.Tde.Icon.IIcon)">
            <summary>
            <para>判断当前图元基类子对象与指定的图元基类子对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定图元基类子对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.AssociateDeviceType">
            <summary>
            <para>获得图元关联的设备的类型</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.Device">
            <summary>
            <para>获得图元关联的设备对象</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.IconState">
            <summary>
            <para>获得或设置图元的状态。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.IconSubType">
            <summary>
            <para>获得图元的子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.Rtu">
            <summary>
            <para>获得或设置图元所属的设备集中站。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.RtuId">
            <summary>
            <para>获得图元所属的设备集中站的ID。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.ButtonHandle">
            <summary>
            <para>获得图元所属的设备集中站的ID。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.DefaultBoundsRect">
            <summary>
            <para>获得图元的默认边界大小。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.DisplayColor">
            <summary>
            <para>获得图元的当前绘制在站场图界面上的颜色。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.IconType">
            <summary>
            <para>获得图元的类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.FlashState">
            <summary>
            <para>获得或设置图元当前正处于闪烁中的可见还是不可见的状态，用于辅助绘制图元的闪烁效果。只有在图元正处于闪烁状态时，其值有意义。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.Level">
            <summary>
            <para>获得图元的绘制的层级（先后顺序）。层级高的后绘制，层级低的先绘制。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.Visible">
            <summary>
            <para>获得或设置图元的可见状态。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.CurrentColor">
            <summary>
            <para>获得或设置图元的当前颜色。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.DefaultColor">
            <summary>
            <para>获得图元的默认颜色。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.Flashing">
            <summary>
            <para>获得或设置图元当前是否闪烁。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IIcon.BoundsRect">
            <summary>
            <para>实现IDraw接口。根据图元的默认大小和当前站场图的缩放比例进行计算，获得图元的实际大小。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.defaultStartPosition">
            <summary>
            默认列车实时起始位置
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.defaultEndPosition">
            <summary>
            默认列车实时终止位置
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_position">
            <summary>
            <para>矩形左上角的坐标</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_width">
            <summary>
            <para>矩形宽</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_height">
            <summary>
            <para>矩形高</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_weight">
            <summary>
            <para>矩形线宽</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_fill">
            <summary>
            <para>矩形是否填充</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_degree">
            <summary>
            <para>矩形旋转角度。若不旋转，为0。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_angle">
            <summary>
            <para>矩形旋转弧度。计算公式 弧度 = π * 角度 / 180</para>
            <para>当矩形存在旋转角度时，该值有效。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_polygonIconPoint">
            <summary>
            <para>矩形的四个点的坐标值。</para>
            <para>当矩形存在旋转角度时，该值有效。</para>
            <para>0:左上，1：右上，2：右下，3：左下</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_startPosition">
            <summary>
            列车实时位置起始（0-1）
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconRectangle.m_endPosition">
            <summary>
            列车实时终止位置(0-1)
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.#ctor(CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>调用父类的构造函数进行初始化。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    所有字段被赋予新值。</para>
            </summary>
            <param name="rtu">图元所属Rtu</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.SetAccuratePosition(System.Single,System.Single)">
            <summary>
            设置列车精确位置
            </summary>
            <param name="start">起始位置</param>
            <param name="end">结束位置</param>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.InitializeAttribute(System.Collections.Generic.List{System.String})">
            <summary>
            <para>重写IIcon方法，根据输入参数初始化成员。</para>
            <para>前置条件：</para>
            <para>    attributeCollection 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="attributeCollection">从配置文件中读取出来的数据初始化字符串序列</param>
            <returns>
            <para>true：初始化成功</para>
            <para>false：初始化失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.Intersect(System.Drawing.Point)">
            <summary>
            <para>重写IIcon方法，判断输入点是否位于图元的所在区域内。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="point">输入点</param>
            <returns>
            <para>true：输入点位于图元的所在区域内</para>
            <para>false：输入点没有位于图元的所在区域内</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.DrawIcon(System.Drawing.Graphics)">
            <summary>
            <para>重写IIcon方法，绘制图元。</para>
            <para>前置条件：</para>
            <para>    cGraphics 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">封装一个GDI+绘图图面</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.DrawRectangleNormal(System.Drawing.Graphics)">
            <summary>
            <para>绘制无旋转矩形。</para>
            <para>前置条件：</para>
            <para>    cGraphics 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">封装一个GDI+绘图图面</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.DrawRectangleWithAngle(System.Drawing.Graphics)">
            <summary>
            <para>绘制旋转矩形。</para>
            <para>前置条件：</para>
            <para>    cGraphics 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">封装一个GDI+绘图图面</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.GetDefaultBoundOfRectangleNormal">
            <summary>
            <para>获得非旋转矩形的默认边界。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>非旋转矩形的默认边界</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.GetDefaultBoundOfRectangleWithAngle">
            <summary>
            <para>获得旋转矩形的默认边界。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>旋转矩形的默认边界</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.IntersectInRectangleNormal(System.Drawing.Point)">
            <summary>
            <para>判断输入点是否位于非旋转矩形的所在区域内。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="point">输入点</param>
            <returns>
            <para>true：输入点位于非旋转矩形的所在区域内</para>
            <para>false：输入点没有位于非旋转矩形的所在区域内</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.IntersectInRectangleWithAngle(System.Drawing.Point)">
            <summary>
            <para>判断输入点是否位于旋转矩形的所在区域内。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="point">输入点</param>
            <returns>
            <para>true：输入点位于旋转矩形的所在区域内</para>
            <para>false：输入点没有位于旋转矩形的所在区域内</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconRectangle.IsSame(CSR.CUIT.Model.Tde.Icon.IconRectangle)">
            <summary>
            <para>判断当前矩形图元对象与指定的矩形图元对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定矩形图元对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IconRectangle.Position">
            <summary>
            <para>获取矩形左上角坐标</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IconRectangle.DefaultBoundsRect">
            <summary>
            <para>重写IIcon属性，获得图元的默认边界大小。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.DeviceSignal">
            <summary>
            <para>定义与信号机相关的属性和操作。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.IDevice">
            <summary>
            <para>定义与所有设备相关的通用属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.IDevice.GetControlCode(System.UInt16)">
            <summary>
            <para>获得该设备指定位置的控制码位</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.IDevice.GetIndicationCode(System.UInt16)">
            <summary>
            获取指定类型的表示码位
            </summary>
            <param name="indicationType">表示码位类型</param>
            <returns>0：没找到对应类型的表示码位；1：表示码位</returns>
            <remarks>
            <para> 蒋湘宁 2013-12-21  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.IDevice.SetIndicationCode(System.UInt16,System.Boolean)">
            <summary>
            设置指定类型的显示码位
            </summary>
            <param name="indicationType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.IDevice.GetKP(CSR.CUIT.Model.Tde.Device.IDevice)">
            <summary>
            获取设备的公里标，如果是轨道获取起始公里标，如果是道岔获取岔心公里标
            </summary>
            <param name="cDevice">指定设备</param>
            <returns>公里标</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.IDevice.CalcTsrDir(CSR.CUIT.Model.Tde.Device.IDevice,CSR.CUIT.Model.Tde.Device.IDevice)">
            <summary>
            计算方向，如果起点设备的公里标大于终点设备，则为上行，否则为下行。
            </summary>
            <param name="cBeginDevice">起点设备</param>
            <param name="cEndDevice">终点设备</param>
            <returns>方向</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.IDevice.DeviceHandle">
            <summary>
            <para>获得设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.IDevice.DeviceType">
            <summary>
            <para>获得设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.IDevice.DeviceSubType">
            <summary>
            <para>获得设备子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.IDevice.Name">
            <summary>
            <para>获得设备名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.IDevice.Station">
            <summary>
            <para>获得设备所属的车站对象</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.IDevice.Rtu">
            <summary>
            <para>获得或设置设备所属的设备集中站。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.IDevice.RtuId">
            <summary>
            <para>获得设备所属的设备集中站ID。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.#ctor(CSR.CUIT.Model.Tde.Logic.Signal)">
            <summary>
            <para>初始化字段，并调用父类的构造函数。</para>
            <para>前置条件：</para>
            <para>    device 不为空</para>
            <para>后置条件：</para>
            <para>    字段m_signal被赋值为device指向的对象。</para>
            </summary>
            <param name="device">Signal对象。</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.ResetStatus">
            <summary>
            <para>重置状态</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    无</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.GetControlCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备输出码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="controlType">码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.GetRouteControlCode(System.UInt16,System.String)">
            <summary>
            <para>获取当前信号机下指定进路名称和指定控制码位类型的控制码位句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="controlType">码位类型</param>
            <param name="routeName">进路名称</param>
            <returns>
            <para>0：未找到指定条件的控制码位句柄</para>
            <para>否则：返回指定条件的控制码位句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.GetIndicationCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备表示码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="inputtype">表示码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.GetExistSetRoute">
            <summary>
            <para>获取当前信号机下已经设置好的进路</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>null:当前信号机下没有已经设置好的进路</para>
            <para>否则：返回已经设置好的进路</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.GetExistSetRoute(System.Boolean)">
            <summary>
            <para>获取当前信号机下已经设置好的进路</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="isGuideRoute">是否是引导进路</param>
            <returns>
            <para>null:当前信号机下没有已经设置好的进路</para>
            <para>否则：返回已经设置好的进路</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.GetRouteAutoControl">
            <summary>
            <para>获取当前信号机自动控进路名称列表</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>返回当前信号机所有自动控进路名称列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.GetRouteManulControl">
            <summary>
            <para>获取当前信号机人工控进路名称列表</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>返回当前信号机所有人工控进路名称列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.GetRouteUnderControl(System.Boolean)">
            <summary>
            <para>获取当前信号机人工控或自动控的进路名称列表</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="isAuto">是否是自动控</param>
            <returns>
            <para>返回当前信号机所有人工控或自动控进路名称列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.GetNextLinkDevice(CSR.CUIT.Model.Tde.Device.EmDeviceDirection)">
            <summary>
            获取指定方向上的下一个连接设备
            </summary>
            <param name="dir">指定连接方向</param>
            <returns></returns>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceSignal.m_signal">
            <summary>
            <para>站场图基础数据文件中读取的站台结构体</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSignal.IsSame(CSR.CUIT.Model.Tde.Device.DeviceSignal)">
            <summary>
            <para>判断当前信号机对象与指定的信号机对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定信号机对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-28  增加对other=null时的处理</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSignal.DeviceHandle">
            <summary>
            <para>实现IDevice的抽象属性，获得设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSignal.DeviceType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSignal.DeviceSubType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSignal.Station">
            <summary>
            <para>实现IDevice的抽象属性，获得设备所属的车站对象。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSignal.Name">
            <summary>
            <para>实现IDevice的抽象属性，获得设备名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSignal.Device">
            <summary>
            <para>获取基础数据中信号机设备数据。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BaseDisplay.ZoomDelta(System.Double,System.Double)">
            <summary>
            <para>缩放站场图（增加指定缩放偏移）</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="fHZoomDelta">横坐标缩放比例增加值</param>
            <param name="fVZoomDelta">纵坐标缩放比例增加值</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BaseDisplay.Zoom(System.Double,System.Double)">
            <summary>
            <para>设置站场图缩放比例</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="fHZoom">横坐标缩放比例</param>
            <param name="fVZoom">纵坐标缩放比例</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BaseDisplay.SetZoomMode(CSR.CUIT.GlobalService.ShareLib.EmZoomMode)">
            <summary>
            <para>显示站场图的显示模式。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-01-03  变更名称</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BaseDisplay.m_nViewWidth">
            <summary>
            <para>站场图显示宽度</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BaseDisplay.m_nViewHeight">
            <summary>
            <para>站场图显示高度</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BaseDisplay.m_nGraphWidth">
            <summary>
            <para>该站场图的原始宽度</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BaseDisplay.m_nGraphHeight">
            <summary>
            <para>该站场图的原始高度</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BaseDisplay.m_BoundsRect">
            <summary>
            <para>该站场图平移和缩放后的边界</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BaseDisplay.m_movement">
            <summary>
            <para>平移向量</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BaseDisplay.m_zoom">
            <summary>
            <para>缩放向量</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.BaseDisplay.BoundsRect">
            <summary>
            <para>获取站场图的平移和缩放后的边界</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.LogicTable">
            <summary>
            <para>一个图元拥有一张逻辑表，本类封装了逻辑表相关的操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.#ctor(System.Boolean)">
            <summary>
            <para>根据输入参数初始化字段。</para>
            <para>前置条件：无</para>
            <para>后置条件：</para>
            <para>    字段m_isSimple被赋予新值。</para>
            </summary>
            <param name="isSimpleLogicTable">是否简单逻辑表</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.GetColor">
            <summary>
            <para>根据状态码位表中图元的最新状态值以及图元的逻辑表进行计算，获得图元的最新颜色。</para>
            <para>前置条件：</para>
            <para>    m_colorCollection长度不为0</para>
            <para>    m_rtu!=null</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.Initialize(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32})">
            <summary>
            <para>初始化逻辑表。</para>
            <para>前置条件：</para>
            <para>    handleList colorList 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handleList">对于SimpleLogicTable，传入handle列表； 对于ComplexLogicTable，传入表达式列表</param>
            <param name="colorList">颜色列表</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.AddColor(System.Int32)">
            <summary>
            <para>初始化时向颜色列表Color列表增加项，用于简单逻辑表</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="colorIndex">待加入列表的颜色索引</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.AddExpression(System.String)">
            <summary>
            <para>解析表达式字符串并添加进逻辑表的表达式列表中。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="expression">待加入列表的表达式字符串</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.AddHandle(System.String)">
            <summary>
            <para>向简单逻辑表的码位列表中添加码位。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handleTemp">待加入列表的码位</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.GetColorFromSimpleLT">
            <summary>
            <para>根据最新的状态码位值计算简单逻辑表，获得对应的显示方案。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>TdeColor对象：存在与计算结果对应的显示方案。</para>
            <para>null：不存在与计算结果对应的显示方案。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.GetColorFromComplexLT">
            <summary>
            <para>根据最新的状态码位值计算复杂逻辑表，获得对应的显示方案。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>TdeColor对象：存在与计算结果对应的显示方案。</para>
            <para>null：不存在与计算结果对应的显示方案。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.SetIcon(CSR.CUIT.Model.Tde.Icon.IIcon)">
            <summary>
            <para>设置逻辑表关联的图元</para>
            <para>前置条件：</para>
            <para>    输入参数handleList和colorList的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="icon">图元</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.LogicTable.m_complexExpressionCollection">
            <summary>
            <para>复杂逻辑表专属。保存该逻辑表相关的所有状态码位handle的表达式。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.LogicTable.m_simpleHandleCollection">
            <summary>
            <para>简单逻辑表专属。保存该逻辑表相关的所有状态码位的handle。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.LogicTable.m_complexHandleCollection">
            <summary>
            <para>复杂逻辑表专属。保存该逻辑表相关的所有状态码位的handle。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.LogicTable.m_colorCollection">
            <summary>
            <para>简单逻辑表和复杂逻辑表通用。保存图元的所有显示方案。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.LogicTable.m_isSimple">
            <summary>
            <para>标识本逻辑表属于简单逻辑表，还是复杂逻辑表。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.LogicTable.IsSame(CSR.CUIT.Model.Tde.LogicTable)">
            <summary>
            <para>判断当前逻辑表对象与指定的逻辑表对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定逻辑表对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.LogicTable.HandleList">
            <summary>
            <para>获得逻辑表关联的所有码位</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.LogicTable.CalcBitStatus">
            <summary>
            <para>获取计算码位状态的算法</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.EmDeviceDirection">
            <summary>
            <para>指示上下行方向。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.DeviceSwitch">
            <summary>
            <para>定义与道岔相关的属性和操作。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceSwitch.m_switch">
            <summary>
            <para>站场图基础数据文件中读取的道岔结构体</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceSwitch.m_pCircuit">
            <summary>
            <para>道岔所属的物理轨道区段</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSwitch.#ctor(CSR.CUIT.Model.Tde.Logic.Switch)">
            <summary>
            <para>初始化字段，并调用父类的构造函数。</para>
            <para>前置条件：device 不为空</para>
            <para>后置条件：字段m_switch被赋值为device指向的对象。</para>
            </summary>
            <param name="device">Switch对象。</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSwitch.GetControlCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备输出码位中指定码位类型的句柄</para>
            </summary>
            <param name="controlType">码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSwitch.GetIndicationCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备表示码位中指定码位类型的句柄</para>
            </summary>
            <param name="inputtype">表示码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-30  增加处理，若道岔的input码位列表没有对应的码位类型，则查找大区段码位</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSwitch.SetIndicationCode(System.UInt16,System.Boolean)">
            <summary>
            设置本设备指定码位类型对应的码位值
            </summary>
            <param name="indicationType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSwitch.GetSwitchBlockTSRStatus(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            获取指定道岔指定部分的TSR状态
            </summary>
            <param name="cSwitch">指定道岔</param>
            <param name="usTSRActivingBitType">道岔待激活码位类型</param>
            <param name="usTSRActivedBitType">道岔激活码位类型</param>
            <param name="usTSRRemovingBitType">道岔待移除码位类型</param>
            <returns>指定道岔指定部分的TSR状态:1 待激活 2:激活 3:待移除 0:移除</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSwitch.CalculateAbs(System.Single,System.Single,System.Single)">
            <summary>
            计算偏移的比例
            </summary>
            <param name="start">起始KP</param>
            <param name="end">终止KP</param>
            <param name="abs">偏移</param>
            <returns></returns>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSwitch.ResetStatus">
            <summary>
            <para>重置状态</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceSwitch.IsSame(CSR.CUIT.Model.Tde.Device.DeviceSwitch)">
            <summary>
            <para>判断当前道岔对象与指定的道岔对象是否相等</para>
            </summary>
            <param name="other">指定道岔对象</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-28  增加对other=null时的处理</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSwitch.Device">
            <summary>
            <para>获取基础数据中道岔设备数据。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSwitch.Station">
            <summary>
            <para>实现IDevice的抽象属性，获得设备所属的车站对象。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSwitch.Name">
            <summary>
            <para>实现IDevice的抽象属性，获得设备名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSwitch.Circuit">
            <summary>
            <para>获取道岔所属物理区段</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            <para> 蒋湘宁 2013-12-27  修复BUG 347</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSwitch.DeviceType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSwitch.DeviceSubType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSwitch.DeviceHandle">
            <summary>
            <para>实现IDevice的抽象属性，获得设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceSwitch.Direction">
            <summary>
            道岔方向：1是道岔开向向右(下行），0是道岔开向向左（上行）
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.PopupMenuItem">
            <summary>
            <para>右键弹出菜单中的项</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenuItem.m_tokenCollection">
            <summary>
            <para>表达式解析完成后，由操作符和操作符组成的字符串列表</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenuItem.m_setFalseInvisible">
            <summary>
            <para>当菜单项不可被用户点击且弹出对话框时，设置该菜单项的显示方式。</para>
            <para>true：菜单项设置为不可见（visible）</para>
            <para>false：菜单项设置为不可用（enable）</para>
            <para>默认为true。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenuItem.m_dialogInfo">
            <summary>
            <para>该菜单项关联的对话框的一些属性的集合</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenuItem.m_initMenuItemCommand">
            <summary>
            初始化菜单关联的Command，这个工作在Mainform中完成
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenuItem.#ctor(CSR.CUIT.Model.DialogInfo,System.String,System.Boolean)">
            <summary>
            <para>根据输入参数初始化字段。</para>
            <para>前置条件：</para>
            <para>    info 不为空</para>
            <para>后置条件：</para>
            <para>    本菜单项的Text被赋予新值。</para>
            <para>    m_tokenCollection、m_setFalseInvisible、m_dialogInfo被赋予新值。</para>
            </summary>
            <param name="info">该菜单项关联的对话框的一些属性的集合</param>
            <param name="expression">影响该菜单项是否可用的表达式</param>
            <param name="setFalseInvisible">设置该菜单项在不可用时的显示方式。</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenuItem.UpdateDisplay(CSR.CUIT.GlobalService.ShareLib.EmRole,CSR.CUIT.Model.GetStatusCallback)">
            <summary>
            <para>计算表达式，更新菜单项的显示方式。</para>
            <para>前置条件：</para>
            <para>    输入参数bitHandle的取值范围由调用者保证。</para>
            </summary>
            <param name="role">用户角色</param>
            <param name="GetStatus">委托的实现。其作用是通过handle查询码位表，获得码位的状态</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenuItem.OnClick(System.EventArgs)">
            <summary>
            <para>重写OnClick事件。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenuItem.InitCommandEvent(CSR.CUIT.Model.InitMenuItemCommandCallback)">
            <summary>
            <para>设置菜单项被点击时，执行的命令。</para>
            </summary>
            <param name="menuItemClickArgs">委托的实现。用于设置菜单绑定的命令。</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.XMLParser">
            <summary>
            <para>包含所有解析Xml图形界面数据文件的方法</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.XMLParser.m_RtuGroup">
            <summary>
            <para>RtuGroup对象</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.#ctor(CSR.CUIT.Model.Tde.RtuGroup)">
            <summary>
            <para>根据输入参数初始化字段。</para>
            <para>前置条件：</para>
            <para>    rtuGroup 不为空</para>
            <para>后置条件：</para>
            <para>    m_RtuGroup被赋予新值。</para>
            </summary>
            <param name="rtuGroup">设备集中站集合</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.ParseXML(System.String)">
            <summary>
            <para>解析文件</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="xmlFile">图形界面数据文件路径</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.CheckXmlExist(System.String)">
            <summary>
            <para>检查数据文件是否存在。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="xmlFile">数据文件</param>
            <returns>
            <para>true：通过检查</para>
            <para>false：没有通过检查</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.CheckXmlLegal(System.String)">
            <summary>
            <para>校验CRC。</para>
            <para>前置条件：</para>
            <para>    输入参数reader的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="xmlFile">XML文件路径</param>
            <returns>
            <para>true：通过检验</para>
            <para>false：没有通过检验</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeColorLib(System.Xml.XmlReader)">
            <summary>
            <para>根据数据文件初始化类ColorLib的成员。</para>
            <para>前置条件：</para>
            <para>    reader 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <returns>
            <para>true：完成初始化</para>
            <para>false：没有完成初始化</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeFontLib(System.Xml.XmlReader)">
            <summary>
            <para>根据数据文件初始化类FontLib的成员。</para>
            <para>前置条件：</para>
            <para>    reader 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <returns>
            <para>true：完成初始化</para>
            <para>false：没有完成初始化</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeRtu(System.Xml.XmlReader,CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>根据数据文件初始化设备集中站下属的图元。</para>
            <para>前置条件：</para>
            <para>    reader rtu 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="rtu">设备集中站对象</param>
            <returns>
            <para>true：完成初始化</para>
            <para>false：没有完成初始化</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeIcon(System.Xml.XmlReader,CSR.CUIT.Model.Tde.Rtu,System.Collections.Generic.List{System.String})">
            <summary>
            <para>根据数据文件初始化图元。</para>
            <para>前置条件：</para>
            <para>    reader rtu nodeList 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="rtu">设备集中站对象</param>
            <param name="nodeList">用于存储从数据文件中读取出来的图元的各属性</param>
            <returns>
            <para>true：完成初始化</para>
            <para>false：没有完成初始化</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeSimpleLogicTable(System.Xml.XmlReader,CSR.CUIT.Model.Tde.LogicTable@)">
            <summary>
            <para>根据数据文件初始化简单逻辑表。</para>
            <para>前置条件：</para>
            <para>    reader 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="logicTable">完成初始化的逻辑表对象</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeComplexLogicTable(System.Xml.XmlReader,CSR.CUIT.Model.Tde.LogicTable@)">
            <summary>
            <para>根据数据文件初始化复杂逻辑表。</para>
            <para>前置条件：</para>
            <para>    reader 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="logicTable">完成初始化的逻辑表对象</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeCircleIcon(System.Xml.XmlReader,System.Collections.Generic.List{System.String})">
            <summary>
            <para>根据数据文件填充nodeList</para>
            <para>前置条件：</para>
            <para>    reader nodeList 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="nodeList">包含一系列用于初始化图元的数值</param>
            <returns>
            <para>nodeList列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeLineIcon(System.Xml.XmlReader,System.Collections.Generic.List{System.String})">
            <summary>
            <para>根据数据文件填充nodeList</para>
            <para>前置条件：</para>
            <para>    reader nodeList 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="nodeList">包含一系列用于初始化图元的数值</param>
            <returns>
            <para>nodeList列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeRectIcon(System.Xml.XmlReader,System.Collections.Generic.List{System.String})">
            <summary>
            <para>根据数据文件填充nodeList</para>
            <para>前置条件：</para>
            <para>    reader nodeList 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="nodeList">包含一系列用于初始化图元的数值</param>
            <returns>
            <para>nodeList列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializePolygonIcon(System.Xml.XmlReader,System.Collections.Generic.List{System.String})">
            <summary>
            <para>根据数据文件填充nodeList</para>
            <para>前置条件：</para>
            <para>    reader nodeList 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="nodeList">包含一系列用于初始化图元的数值</param>
            <returns>
            <para>nodeList列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeTextIcon(System.Xml.XmlReader,System.Collections.Generic.List{System.String})">
            <summary>
            <para>根据数据文件填充nodeList</para>
            <para>前置条件：</para>
            <para>    reader nodeList 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="nodeList">包含一系列用于初始化图元的数值</param>
            <returns>
            <para>nodeList列表</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeMenus(System.Xml.XmlReader)">
            <summary>
            <para>根据数据文件初始化菜单库</para>
            <para>前置条件：</para>
            <para>    reader 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <returns>
            <para>true：完成初始化</para>
            <para>false：没有完成初始化</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeMenu(System.Xml.XmlReader,CSR.CUIT.Model.PopupMenuLib)">
            <summary>
            <para>根据数据文件初始化菜单</para>
            <para>前置条件：</para>
            <para>    reader 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="menuLib">菜单库对象</param>
            <returns>
            <para>true：完成初始化</para>
            <para>false：没有完成初始化</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.XMLParser.InitializeMenuItem(System.Xml.XmlReader,System.Byte)">
            <summary>
            <para>根据数据文件初始化菜单项</para>
            <para>前置条件：</para>
            <para>    reader 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="reader">XML读文件流</param>
            <param name="popupDeviceType">弹出菜单类型</param>
            <returns>
            <para>PopupMenuItem对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.TdeColor">
            <summary>
            <para>颜色方案类。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.TdeColor.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            <para>初始化颜色的属性。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    属性Name、ColorInArgb、Flash被初始化。</para>
            </summary>
            <param name="name">颜色名称</param>
            <param name="colorValue">颜色的Int32值</param>
            <param name="flash">颜色是否闪烁</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.TdeColor.Equals(CSR.CUIT.Model.TdeColor)">
            <summary>
            <para>实现IEquatable接口。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">比较的对象</param>
            <returns>
            <para>true：两个对象相等 </para>
            <para>false：两个对象不相等。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.TdeColor.Name">
            <summary>
            <para>获取和设置颜色名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.TdeColor.ColorInArgb">
            <summary>
            <para>获取和设置颜色对应的Color对象。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.TdeColor.Flash">
            <summary>
            <para>获取和设置颜色是否闪烁。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.TdeColor.IsVisible">
            <summary>
            <para>当前色是否可见（颜色包含透明度）</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.TdeColor.ReferenceToCurrenctColor">
            <summary>
            <para>获得本颜色是否为约定的当前色ARGB=(0,0,0,1)。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.ColorLib">
            <summary>
            <para>颜色方案库。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.ColorLib.TransParentColor">
            <summary>
            <para>透明色</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.#ctor">
            <summary>
            <para>无内容。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    无</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.AddColor(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            <para>将颜色加入颜色库。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="index">颜色的索引</param>
            <param name="name">颜色名称</param>
            <param name="colorValue">颜色值</param>
            <param name="flash">颜色是否闪烁</param>
            <returns>
            <para>true：添加成功</para>
            <para>false：添加失败。该颜色索引已存在。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.GetBackgroundColor">
            <summary>
            <para>获得背景色。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>背景色的TdeColor对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.GetFocusColor">
            <summary>
            <para>获得选中色。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>选中色的Color对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.GetColor(System.Int32)">
            <summary>
            <para>获得索引指定的颜色。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="colorIndex">颜色索引</param>
            <returns>
            <para>TdeColor对象：根据索引找到了指定的颜色</para>
            <para>null：在颜色库中不存在该索引对应的颜色。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.GetColorInARGB(System.Int32)">
            <summary>
            <para>获得索引指定的颜色的Color对象。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="colorIndex">颜色索引</param>
            <returns>
            <para>Color对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.GetDefaultColor">
            <summary>
            <para>获得默认颜色。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>默认颜色的TdeColor对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.SetBackGroundColor(System.Int32)">
            <summary>
            <para>设置背景色。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="colorIndex">背景色在颜色库中的颜色索引</param>
            <returns>
            <para>true：设置背景色成功</para>
            <para>false：设置背景色失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.SetDefaultColor(System.Int32)">
            <summary>
            <para>设置默认色。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="colorIndex">背景色在颜色库中的颜色索引</param>
            <returns>
            <para>true：设置默认色成功</para>
            <para>false：设置默认色失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.SetFocusColor(System.Int32)">
            <summary>
            <para>设置选中色。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="colorIndex">选中色在颜色库中的颜色索引</param>
            <returns>
            <para>true：设置选中色成功</para>
            <para>false：设置选中色失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.ColorLib.m_ColorDictionary">
            <summary>
            <para>颜色库，键为int，值为TdeColor对象</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.ColorLib.m_defaultColorIndex">
            <summary>
            <para>默认颜色在颜色库中的索引</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.ColorLib.m_backgroundColorIndex">
            <summary>
            <para>背景色在颜色库中的索引</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.ColorLib.m_flashInterval">
            <summary>
            <para>若颜色闪烁，其闪烁间隔</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.ColorLib.m_focusColor">
            <summary>
            <para>选中色。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.ColorLib.IsSame(CSR.CUIT.Model.ColorLib)">
            <summary>
            <para>比较两个对象是否一致。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">比较的对象</param>
            <returns>
            <para>true：两个对象相等 </para>
            <para>false：两个对象不相等。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.ColorLib.FlashInterval">
            <summary>
            <para>获得或设置颜色的闪烁间隔。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.DeviceCircuit">
            <summary>
            <para>定义与物理轨道区段相关的属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceCircuit.#ctor(CSR.CUIT.Model.Tde.Logic.Circuit)">
            <summary>
            <para>初始化字段，并调用父类的构造函数。</para>
            <para>前置条件：</para>
            <para>    device 不为空</para>
            <para>后置条件：</para>
            <para>    字段m_circuit被赋值为device指向的对象。</para>
            </summary>
            <param name="device">Circuit对象。</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceCircuit.GetControlCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备输出码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="controlType">码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceCircuit.GetIndicationCode(System.UInt16)">
            <summary>
            <para>获得设备表示码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="inputtype">表示码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceCircuit.m_circuit">
            <summary>
            <para>站场图基础数据文件中读取的物体轨道区段结构体</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceCircuit.Device">
            <summary>
            <para>获取当前设备信息关联的Circuit数据</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceCircuit.Name">
            <summary>
            <para>实现IDevice的抽象属性，获得设备名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceCircuit.Station">
            <summary>
            <para>实现IDevice的抽象属性，获得设备所属的车站对象。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceCircuit.DeviceType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceCircuit.DeviceSubType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceCircuit.DeviceHandle">
            <summary>
            <para>实现IDevice的抽象属性，获得设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.IndicationTable.InitIndicationTable(System.String)">
            <summary>
            初始化IndicationTable.xml
            </summary>
            <param name="indicationTableFile"></param>
            <returns></returns>
            <remarks>
             蒋湘宁 2013-12-21  创建函数
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.IndicationTable.GetInputType(System.String)">
            <summary>
            根据输入码位类型名称获得输入码位类型值
            </summary>
            <param name="typeName"></param>
            <returns></returns>
            <remarks>
             蒋湘宁 2013-12-21  创建函数
             蒋湘宁 2013-12-25  修复BUG 313
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.IndicationTable.GetInputName(System.String)">
            <summary>
            根据输入码位类型名称获得输入码位类型的名称
            </summary>
            <param name="typeName"></param>
            <returns></returns>
             <remarks>
             蒋湘宁 2014-08-12  创建函数
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.ExpressionCharCollection">
            <summary>
            <para>表达式操作符集合。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.ExpressionCharCollection.#ctor">
            <summary>
            <para>在列表中增加操作符项。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    列表中增加 + * ( ) # ! 6个操作符。</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.GetStatusCallback">
            <summary>
            <para>提供一个回调方法，用于根据码位获取最新状态。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.ExpressionCalculator.charCollection">
            <summary>
            <para>操作符列表</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.ExpressionCalculator.Calculate(System.Collections.Generic.List{System.String},CSR.CUIT.Model.GetStatusCallback,System.Boolean@)">
            <summary>
            <para>计算表达式的值</para>
            <para>前置条件：</para>
            <para>    tokenCollection GetStatus 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="tokenCollection">视图对象。</param>
            <param name="GetStatus">GetStatusCallback委托的实现</param>
            <param name="re">表达式的计算结果</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ExpressionCalculator.GenerateTokenArray(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            <para>解析表达式，将其操作符和操作数都分解成单个的项，存入string列表中。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="expression">待解析的表达式</param>
            <param name="tokenCollection">解析结果</param>
            <returns>
            <para>0：解析成功</para>
            <para>非0：解析失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-21  修复函数，不再直接调用GenerateTokenArray(String,List,List)</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ExpressionCalculator.GenerateTokenArray(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.UInt16}@)">
            <summary>
            <para>解析表达式，将其操作符和操作数都分解成单个的项，存入string列表中，将操作数存入Uint16列表中。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="expression">待解析的表达式</param>
            <param name="tokenCollection">解析结果</param>
            <param name="handleCollection">操作数列表</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ExpressionCalculator.GetInvalidInput(System.Collections.Generic.List{System.String},CSR.CUIT.Model.GetStatusCallback)">
            <summary>
            已知布尔表达式计算为false，获得使表达式计算失败的输入码位。只适用于表达式为“积”形式的情况。
            </summary>
            <param name="tokenCollection"></param>
            <returns></returns>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.EmUpdateBitmapType.All">
            <summary>
            更新整张码位表
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.EmUpdateBitmapType.IL">
            <summary>
            更新联锁码位
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.EmIconState">
            <summary>
            <para>描述图元（ICON）的状态。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.EmIconType">
            <summary>
            <para>表示图元的类型。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.EmIconSubType">
            <summary>
            <para>表示图元的子类型。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Block.#ctor(System.UInt16,System.Int32)">
            <summary>
            构造一个Block，临时限速只需要使用起始偏移
            </summary>
            <param name="blockID"></param>
            <param name="startAbs"></param>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Block.#ctor(System.UInt16,System.Int32,System.Int32)">
            <summary>
            构造一个Block，列车精确位置需要使用终止偏移
            </summary>
            <param name="blockID"></param>
            <param name="startAbs"></param>
            <param name="endAbs"></param>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.DeviceWindow">
            <summary>
            <para>定义与车次窗相关的属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceWindow.#ctor(CSR.CUIT.Model.Tde.Logic.Window)">
            <summary>
            <para>初始化字段，并调用父类的构造函数。</para>
            <para>前置条件：</para>
            <para>    device 不为空</para>
            <para>后置条件：</para>
            <para>    字段m_window被赋值为device指向的对象。</para>
            </summary>
            <param name="device">Window对象。</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceWindow.GetControlCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备输出码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="controlType">码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceWindow.GetBitStatus(System.UInt16)">
            <summary>
            获得车次窗码位
            </summary>
            <param name="handle"></param>
            <returns></returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-13  修复BUG185</para>
            <para> 蒋湘宁 2013-12-28  原代码无法跳过了数组最后一位，修复该BUG</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceWindow.UpdateWindowTextIcon">
            <summary>
            更新车次窗图元
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-12-30  修复BUG 340</para>
            <para> 蒋湘宁 2014-01-14  修复BUG 267</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceWindow.m_window">
            <summary>
            <para>站场图基础数据文件中读取的车次窗结构体</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceWindow.Name">
            <summary>
            <para>实现IDevice的抽象属性，获得设备名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceWindow.Station">
            <summary>
            <para>实现IDevice的抽象属性，获得设备所属的车站对象。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceWindow.DeviceType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceWindow.DeviceSubType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceWindow.DeviceHandle">
            <summary>
            <para>实现IDevice的抽象属性，获得设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.DeviceAlarm">
            <summary>
            <para>定义与表示灯相关的属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceAlarm.#ctor(CSR.CUIT.Model.Tde.Logic.Alarm)">
            <summary>
            <para>初始化字段，并调用父类的构造函数。</para>
            <para>前置条件：</para>
            <para>    device 不为空</para>
            <para>后置条件：</para>
            <para>    字段m_alarm被赋值为device指向的对象。</para>
            </summary>
            <param name="device">Alarm对象。</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceAlarm.GetControlCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备输出码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="controlType">码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceAlarm.GetIndicationCode(System.UInt16)">
            <summary>
            <para>获得设备表示码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="inputtype">表示码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceAlarm.m_alarm">
            <summary>
            <para>站场图基础数据文件中读取的表示灯结构体</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceAlarm.Device">
            <summary>
            <para>获得Alarm对象。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceAlarm.Name">
            <summary>
            <para>实现IDevice的抽象属性，获得设备名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceAlarm.Station">
            <summary>
            <para>实现IDevice的抽象属性，获得设备所属的车站对象。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceAlarm.DeviceType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceAlarm.DeviceSubType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceAlarm.DeviceHandle">
            <summary>
            <para>实现IDevice的抽象属性，获得设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Zoom">
            <summary>
            <para>封装对绘图元素点和矩形的缩放操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Zoom.#ctor">
            <summary>
            <para>初始化字段，初始化显示模式为正常显示。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>m_dXRadio和m_dYRadio被初始化为1</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Zoom.CalcRadio">
            <summary>
            <para>用于等比缩放显示模式，比较X轴缩放比例与Y轴缩放比例，返回其中一个值。</para>
            <para>当X轴缩放比例与Y轴缩放比例都小于1时，返回两者中大的值，否则返回两者中小的值。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    等比缩放比例</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Zoom.LPtoDP(System.Drawing.Point[]@)">
            <summary>
            <para>批量缩放点。</para>
            <para>前置条件：</para>
            <para>    rgPoints 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="rgPoints">需要缩放的点的集合</param>
            <returns>
            <para>rgPoints值被改变</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Zoom.LPtoDP(System.Drawing.Point@)">
            <summary>
            <para>缩放单点。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="point">需要缩放的点</param>
            <returns>
            <para>point值被改变</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Zoom.LPtoDP(System.Drawing.Rectangle@)">
            <summary>
            <para>缩放单个矩形框。</para>
            <para>前置条件：</para>
            <para>    lpRect 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="lpRect">需要缩放的矩形</param>
            <returns>
            <para>lpRect值被改变</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Zoom.LPtoDP(System.Drawing.Size@)">
            <summary>
            <para>缩放单个Size结构。</para>
            <para>前置条件：</para>
            <para>    lpSize 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="lpSize">需要缩放的Size</param>
            <returns>
            <para>lpSize值被改变</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Zoom.LPtoDP(System.Drawing.SizeF@)">
            <summary>
            <para>缩放单个SizeF结构。</para>
            <para>前置条件：</para>
            <para>    lpSize 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="lpSize">需要缩放的SizeF</param>
            <returns>
            <para>lpSize值被改变</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Zoom.m_ZoomMode">
            <summary>
            <para>缩放显示模式</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Zoom.m_dXRadio">
            <summary>
            <para>沿X轴缩放比例</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Zoom.m_dYRadio">
            <summary>
            <para>沿Y轴缩放比例</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.EmProcessReceiverType">
            <summary>
            <para>定义用户在站场图上的进行鼠标操作的种类。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.ISender">
            <summary>
            <para>定义注册、注销、通知IReceiver对象的方法。</para>
            <para>说明详见 7.1.1 需要维护命令对话框与站场图操作的一致性</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.ISender.m_cReceiver">
            <summary>
            <para>观察ISender，响应ISender变化的IReceiver对象。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.ISender.HasReceiver">
            <summary>
            <para>返回一个值，说明当前是否存在已注册的IReceiver对象。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>true：当前存在注册的IReceiver对象。</para>
            <para>false：当前不存在注册的IReceiver对象。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ISender.RegisterReceiver(CSR.CUIT.Model.IReceiver)">
            <summary>
            <para>注册IReceiver对象。该方法为抽象方法，在ISender子类中实现。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ISender.UnRegisterReceiver(CSR.CUIT.Model.IReceiver)">
            <summary>
            <para>注销IReceiver对象。该方法为抽象方法，在ISender子类中实现。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ISender.ProcessReceivers(CSR.CUIT.Model.EmProcessReceiverType,CSR.CUIT.Model.Tde.Icon.IIcon)">
            <summary>
            <para>ISender对象状态发生变化，通知IReceiver对象。该方法为抽象方法，在ISender子类中实现。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.TdeFont">
            <summary>
            <para>字体方案类。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.TdeFont.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            <para>根据输入参数初始化字段。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    字段m_fontName、m_fontStyle、m_fontSize被赋予新值。</para>
            </summary>
            <param name="fontName">字体名称</param>
            <param name="fontSize">字体大小</param>
            <param name="style">字体样式</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.TdeFont.GetFont(System.Single)">
            <summary>
            <para>获得指定大小的字体。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="size">字体大小</param>
            <returns>
            <para>指定大小的Font对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.TdeFont.GetFontInDefaultSize">
            <summary>
            <para>获得默认大小的字体。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>默认大小的Font对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.TdeFont.m_fontName">
            <summary>
            <para>字体名称</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.TdeFont.m_fontStyle">
            <summary>
            <para>字体样式</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.TdeFont.m_fontSize">
            <summary>
            <para>字体大小</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.TdeFont.IsSame(CSR.CUIT.Model.TdeFont)">
            <summary>
            <para>判断当前字体对象与指定的字体对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定字体对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.TdeFont.FontSize">
            <summary>
            <para>获得或设置字体大小。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.FontLib">
            <summary>
            <para>字体样式库。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.FontLib.#ctor">
            <summary>
            <para>无</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    无</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.FontLib.AddFont(System.Int32,System.String,System.Int32,System.Drawing.FontStyle)">
            <summary>
            <para>添加新的字体样式</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="fontIndex">字体索引</param>
            <param name="fontName">字体名称</param>
            <param name="fontSize">字体默认大小，单位为磅值</param>
            <param name="fontStyle">字体样式</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.FontLib.GetDefaultFont(System.Single)">
            <summary>
            <para>获得默认样式、指定大小的字体</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="size">字体大小</param>
            <returns>
            <para>Font对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.FontLib.GetDefaultFontInDefaultSize">
            <summary>
            <para>获得默认样式、默认大小的字体</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>Font对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.FontLib.GetFont(System.Int32,System.Single)">
            <summary>
            <para>获得指定样式、指定大小的字体</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="fontIndex">指定字体索引</param>
            <param name="size">指定字体大小</param>
            <returns>
            <para>Font对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.FontLib.GetFontInDefaultSize(System.Int32)">
            <summary>
            <para>获得指定样式、默认大小的字体</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="fontIndex">指定字体索引</param>
            <returns>
            <para>Font对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.FontLib.GetFontDefaultSize(System.Int32)">
            <summary>
            <para>获得字体的默认大小</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="fontIndex">指定字体索引</param>
            <returns>
            <para>字体大小</para>
            <para>-1：没有找到字体</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.FontLib.SetDefaultFont(System.Int32)">
            <summary>
            <para>指定字体为默认字体。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="defaultFontIndex">指定字体索引</param>
            <returns>
            <para>true：设置成功</para>
            <para>false：设置失败，没有找到对应字体。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.FontLib.m_FontDictionary">
            <summary>
            <para>颜色库，键为int，值为TdeFont对象</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.FontLib.m_defaultFontIndex">
            <summary>
            <para>默认字体在颜色库中的索引</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.FontLib.IsSame(CSR.CUIT.Model.FontLib)">
            <summary>
            <para>判断当前字体库对象与指定的字体库对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定字体库对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.CalcBitStatusByRtuBitmap">
            <summary>
            <para>通过集中站码位表获取指定码位句柄的码位状态</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.CalcBitStatusByRtuBitmap.#ctor(CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>构造对象，初始化码位表所属集中站</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="rtu">码位表所属集中站</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.CalcBitStatusByRtuBitmap.GetBitStatus(System.String)">
            <summary>
            <para>获取指定码位句柄的码位状态</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handle">码位句柄</param>
            <returns>
            <para>返回指定码位句柄的码位状态</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.CalcBitStatusByRtuBitmap.m_Rtu">
            <summary>
            <para>码位表所属集中站</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.InitMenuItemCommandCallback">
            <summary>
            <para>提供一个回调方法，初始化菜单对应的命令。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.PopupMenuLib">
            <summary>
            <para>右键弹出菜单</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenuLib.s_popupMenuCollection">
            <summary>
            <para>所有弹出菜单的集合</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenuLib.InitCommandEvent(CSR.CUIT.Model.InitMenuItemCommandCallback)">
            <summary>
            <para>为下属菜单设置菜单项被点击时，执行的操作方法。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="menuItemClickArgs">委托的实现，用于点击菜单项时，进行的操作。</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenuLib.GetMenu(System.Byte,CSR.CUIT.GlobalService.ShareLib.EmRole,CSR.CUIT.Model.GetStatusCallback)">
            <summary>
            <para>根据设备类型，获取和设备类型关联的菜单对象。</para>
            <para>前置条件：</para>
            <para>    s_popupMenuCollection!=null</para>
            <para>后置条件：无</para>
            </summary>
            <param name="deviceType">设备类型</param>
            <param name="role">用户角色</param>
            <param name="GetStatus">委托的实现，用于点击菜单项时，进行的操作</param>
            <returns>
            <para>ContextMenuStrip对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenuLib.AddMenu(System.Byte,CSR.CUIT.Model.PopupMenu)">
            <summary>
            <para>添加菜单。</para>
            <para>前置条件：</para>
            <para>    menu 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="deviceType">与菜单关联的设备类型</param>
            <param name="menu">待添加的菜单</param>
            <returns>
            <para>true：添加成功</para>
            <para>false：添加失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.IconLine">
            <summary>
            <para>定义与线条图元相关的属性和操作。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconLine.m_beginPosition">
            <summary>
            <para>线条图元的始端顶点。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconLine.m_endPosition">
            <summary>
            <para>线条图元的终端顶点。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconLine.m_weight">
            <summary>
            <para>圆形图元的线宽。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconLine.#ctor(CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>调用父类的构造函数进行初始化。</para>
            <para>后置条件：</para>
            <para>    所有字段被赋予新值。</para>
            </summary>
            <param name="rtu">该ICON所属的RTU</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconLine.InitializeAttribute(System.Collections.Generic.List{System.String})">
            <summary>
            <para>重写IIcon方法，根据输入参数初始化成员。</para>
            <para>前置条件：</para>
            <para>    attributeCollection 不为空</para>
            </summary>
            <param name="attributeCollection">从配置文件中读取出来的数据初始化字符串序列</param>
            <returns>
            <para>true：初始化成功</para>
            <para>false：初始化失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconLine.Intersect(System.Drawing.Point)">
            <summary>
            <para>重写IIcon方法，判断输入点是否位于图元的所在区域内。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            </summary>
            <param name="point">输入点</param>
            <returns>
            <para>true：输入点位于图元的所在区域内</para>
            <para>false：输入点没有位于图元的所在区域内</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconLine.DrawIcon(System.Drawing.Graphics)">
            <summary>
            <para>重写IIcon方法，绘制图元。</para>
            <para>前置条件：</para>
            <para>    cGraphics cRect 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">封装一个GDI+绘图图面</param>
            <param name="cRect">绘制范围</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconLine.IsSame(CSR.CUIT.Model.Tde.Icon.IconLine)">
            <summary>
            <para>判断当前线段图元对象与指定的线段图元对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定线段图元对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IconLine.DefaultBoundsRect">
            <summary>
            <para>重写IIcon属性，获得图元的默认边界大小。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.IconFactory">
            <summary>
            <para>提供一个构造图元的统一接口。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconFactory.CreateIcon(CSR.CUIT.Model.Tde.EmIconType,System.Collections.Generic.List{System.String},CSR.CUIT.Model.Tde.LogicTable,CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>构造指定图元。</para>
            <para>前置条件：</para>
            <para>    point的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="type">待创建的图元类型。CreateIcon将根据该类型，调用不同的构造函数。</param>
            <param name="attributeList">从配置文件中读取出来的数据初始化字符串序列</param>
            <param name="logicTable">逻辑表</param>
            <param name="rtu">该ICON所属的RTU</param>
            <returns>
            <para>IIcon对象：创建成功</para>
            <para>null：创建失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.CalcBitStatusByTrainMode">
            <summary>
            <para>通过列车码位表获取指定码位句柄的码位状态</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.CalcBitStatusByTrainMode.m_window">
            <summary>
            <para>列车码位表所属车次窗，车次窗的码位表是指车次窗当前关联的列车的状态</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.CalcBitStatusByTrainMode.#ctor(CSR.CUIT.Model.Tde.Device.DeviceWindow)">
            <summary>
            <para>构造对象，初始化车站码位表所属车次窗</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="window">列车码位表所属车次窗</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.CalcBitStatusByTrainMode.GetBitStatus(System.String)">
            <summary>
            <para>获取指定码位句柄的码位状态</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handle">码位句柄</param>
            <returns>
            <para>返回指定码位句柄的码位状态</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.BitmapIconMappingList">
            <summary>
            <para>维护状态和图元之间的映射表。</para>
            <para>站场图为了实时显示设备的状态变化，当某个设备的状态发生改变时，相应的一系列的图元的显示颜色会发生改变，通过动态显示更新，直观地向用户展示整条线路的实时信息。</para>
            <para>本类封装了状态和图元的映射关系和相关的操作。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BitmapIconMappingList.m_mapplingDictionary">
            <summary>
            <para>状态码位表通过偏移值来定位某个状态。m_mapplingDictionary为哈希表，负责保存偏移值和图元的映射关系。</para>
            <para>偏移值为主键。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitmapIconMappingList.GetIconList(System.UInt16)">
            <summary>
            <para>根据状态码位表中某个码位的偏移值，在映射表中查找与该码位对应的图元列表。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handle">状态码位表中某个码位的偏移值</param>
            <returns>
            <para>IIcon列表：映射表中存在指定码位的偏移值</para>
            <para>null：映射表中不存在指定码位的偏移值</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitmapIconMappingList.AddMapping(System.Collections.Generic.List{System.UInt16},CSR.CUIT.Model.Tde.Icon.IIcon)">
            <summary>
            <para>增加指定handle与指定icon之间的映射。</para>
            <para>前置条件：</para>
            <para>    handleList icon 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="handleList">码位列表</param>
            <param name="icon">需要与码位列表中所有码位建立映射的图元</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitmapIconMappingList.AddIconToIconList(CSR.CUIT.Model.Tde.Icon.IIcon,System.Collections.Generic.List{CSR.CUIT.Model.Tde.Icon.IIcon}@)">
            <summary>
            <para>将Icon加入已有的Icon列表。</para>
            <para>前置条件：</para>
            <para>    icon iconList 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="icon">待添加的icon</param>
            <param name="iconList">icon列表</param>
            <returns>
            <para>iconList中新增一项</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.BitMap">
            <summary>
            <para>封装对状态码位表的相关操作</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BitMap.m_bitmapCollection">
            <summary>
            <para>码位表</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BitMap.m_lock">
            <summary>
            <para>锁对象，使用该对象对码位表加锁</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.BitMap.m_crc">
            <summary>
            <para>对码位表校验的CRC值</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitMap.IllegalAlterExist(System.UInt16@)">
            <summary>
            <para>判断码位表是否存在非法修改（预期外修改）</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="crcValue">当前码位表的CRC值</param>
            <returns>
            <para>正确处理返回值，且返回当前码位表的CRC值。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitMap.UpdateCrc">
            <summary>
            <para>更新码位表的CRC校验值</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitMap.UpdateBitmap(CSR.CUIT.Model.Tde.BitmapUpdateItem)">
            <summary>
            <para>更新状态码位表中指定位置的值。</para>
            <para>前置条件：</para>
            <para>    item 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="item">待更新的码位</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-31  修改参数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitMap.UpdateBitmap(System.Collections.ObjectModel.ReadOnlyCollection{CSR.CUIT.Model.Tde.BitmapUpdateItem})">
            <summary>
            <para>更新状态码位表中指定位置的值。</para>
            <para>前置条件：</para>
            <para>    itemList 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="itemList">待更新的码位列表</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <remarks>
            <para> 蒋湘宁 2013-12-31  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitMap.InitBitmap(System.Byte[])">
            <summary>
            <para>为状态码位表进行初始化赋值。</para>
            <para>前置条件：bitmapBuff 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="bitmapBuff">为状态码位表进行初始化赋值的字节数组。</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitMap.GetBitStatus(System.UInt16)">
            <summary>
            <para>获得状态码位表中指定位置的状态。</para>
            <para>前置条件：</para>
            <para>    bitHandle 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="bitHandle">指定状态码位表中的位置</param>
            <returns>
            <para>字段m_bitmapCollection中第bitHandle位的值。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitMap.ResetBitmap">
            <summary>
            <para>重置状态码位表。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.BitMap.Initialized">
            <summary>
            <para>当前码位表是否初始化</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.BitMap.Length">
            <summary>
            <para>获得码位表的长度</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.DeviceTrack">
            <summary>
            <para>定义与逻辑轨道相关的属性和操作。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrack.m_track">
            <summary>
            <para>站场图基础数据文件中读取的逻辑轨道结构体</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrack.m_circuit">
            <summary>
            <para>逻辑轨道所属物理轨道区段</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrack.#ctor(CSR.CUIT.Model.Tde.Logic.Track)">
            <summary>
            <para>初始化字段，并调用父类的构造函数。</para>
            <para>前置条件：</para>
            <para>    device 不为空</para>
            <para>后置条件：</para>
            <para>    字段m_track被赋值为device指向的对象。</para>
            </summary>
            <param name="device">Track对象。</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrack.GetControlCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，根据控制码位类型获取本设备对应控制码位在OUTPUT表中的handle</para>
            </summary>
            <param name="controlType">码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrack.GetIndicationCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备表示码位中指定码位类型的句柄</para>
            </summary>
            <param name="inputtype">表示码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-21  增加处理，如果逻辑轨道区段找不到，则查找物理轨道区段</para>
            <para> 蒋湘宁 2013-12-28  增加数据错误时的容错处理</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrack.GetNextLinkDevice(CSR.CUIT.Model.Tde.Device.EmDeviceDirection)">
            <summary>
            获取轨道的下一个连接设备
            </summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrack.SetTrainAccurateLocation(System.Int32,System.Int32)">
            <summary>
            设置列车精确位置
            </summary>
            <param name="startAbs">起始偏移</param>
            <param name="endAbs">终止偏移</param>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrack.IsSame(CSR.CUIT.Model.Tde.Device.DeviceTrack)">
            <summary>
            <para>判断当前轨道对象与指定的轨道对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定轨道对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-28  增加对other=null时的处理</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrack.Circuit">
            <summary>
            <para>获取道岔所属物理区段</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            <para> 蒋湘宁 2013-12-28  增加数据有误时的处理</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrack.Device">
            <summary>
            <para>获取基础数据中逻辑轨道设备数据。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrack.Station">
            <summary>
            <para>实现IDevice的抽象属性，获得设备所属的车站对象。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrack.Name">
            <summary>
            <para>实现IDevice的抽象属性，获得设备名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrack.DeviceType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrack.DeviceSubType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrack.DeviceHandle">
            <summary>
            <para>实现IDevice的抽象属性，获得设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.IBaseView">
            <summary>
            <para>定义更新视图的方法，有关视图的说明详见《CUIT软件内部组件设计规范——安全部分》附录A.1 观察者模式。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.ControlTable.GetNode(System.UInt16,System.Boolean)">
            <summary>
            根据输出码位类型和是否取消获取指定节点
            </summary>
            <param name="outputType"></param>
            <param name="cancel"></param>
            <returns></returns>
        </member>
        <member name="M:CSR.CUIT.Model.ControlTable.GetExpireTime(System.UInt16,System.Boolean,CSR.CUIT.Model.EmTimeExpiredType)">
            <summary>
            根据输出码位类型和是否取消获取指定命令指定类型的超时
            </summary>
            <param name="outputType"></param>
            <param name="cancel"></param>
            <param name="type">超时类型</param>
            <returns></returns>
            <remarks>
             蒋湘宁 2013-12-21  创建函数
             蒋湘宁 2014-01-06  增加超时类型
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ControlTable.Init(System.String)">
            <summary>
            读取配置文件，初始化控制表
            </summary>
            <param name="controlTableFile">控制表文件</param>
            <returns>true：成功；false：失败</returns>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
            <remarks>
             蒋湘宁 2013-12-21  创建函数
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.ControlTable.InitControlTable(System.String)">
            <summary>
            初始化ControlTable.xml
            </summary>
            <param name="controlTableFile"></param>
            <returns></returns>
            <remarks>
             蒋湘宁 2013-12-21  创建函数
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor">
            <summary>
            搜索从始端设备到终端设备的所有设备信息
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.#ctor(CSR.CUIT.Model.Tde.Device.IDevice,CSR.CUIT.Model.Tde.Device.IDevice,System.Byte,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="startDevice">始端设备</param>
            <param name="endDevice">终端设备</param>
            <param name="searchDir">搜索方向，上行1，下行0</param>
            <param name="switchPos">搜索过程中道岔位置，定位1，反位0，用逗号分隔。示例 ： 1,0,1,1</param>
            <param name="removeSignal">是否移除信号机</param>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.Search">
            <summary>
            执行搜索
            </summary>
            <param name="findDevice">已搜索到的设备集合</param>
            <returns>是否搜索成功</returns>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.m_switchPos">
            <summary>
            道岔位置
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.m_maxSearchDepth">
            <summary>
            最大搜索深度
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.m_searchDepth">
            <summary>
            当前搜索深度
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.m_isFind">
            <summary>
            是否找到了终端设备
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.m_startDevice">
            <summary>
            始端设备
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.m_endDevice">
            <summary>
            终端设备
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.m_searchDir">
            <summary>
            搜索方向
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.m_findDevice">
            <summary>
            获取的搜索结果
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.LinkDeviceVisitor.m_removeSignal">
            <summary>
            搜索结果中是否移除信号机
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.IconCircle">
            <summary>
            <para>定义与圆形图元相关的属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconCircle.#ctor(CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>调用父类的构造函数进行初始化。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    所有字段被赋予新值。</para>
            </summary>
            <param name="rtu">该ICON所属的RTU</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconCircle.InitializeAttribute(System.Collections.Generic.List{System.String})">
            <summary>
            <para>重写IIcon方法，根据输入参数初始化成员。</para>
            <para>前置条件：</para>
            <para>    attributeCollection 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="attributeCollection">从配置文件中读取出来的数据初始化字符串序列</param>
            <returns>
            <para>true：初始化成功</para>
            <para>false：初始化失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconCircle.Intersect(System.Drawing.Point)">
            <summary>
            <para>重写IIcon方法，判断输入点是否位于图元的所在区域内。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="point">输入点</param>
            <returns>
            <para>true：输入点位于图元的所在区域内</para>
            <para>false：输入点没有位于图元的所在区域内</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconCircle.DrawIcon(System.Drawing.Graphics)">
            <summary>
            <para>重写IIcon方法，绘制图元。</para>
            <para>前置条件：</para>
            <para>    cGraphics cRect 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">封装一个GDI+绘图图面</param>
            <param name="cRect">绘制范围</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconCircle.m_position">
            <summary>
            <para>圆形图元所在矩形左上角点的位置。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconCircle.m_diameter">
            <summary>
            <para>圆形图元所在矩形宽度。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconCircle.m_weight">
            <summary>
            <para>圆形图元的线宽。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconCircle.m_fill">
            <summary>
            <para>圆形图元是否填充。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconCircle.IsSame(CSR.CUIT.Model.Tde.Icon.IconCircle)">
            <summary>
            <para>判断当前圆形图元对象与指定的圆形图元对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定圆形图元对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IconCircle.DefaultBoundsRect">
            <summary>
            <para>重写IIcon属性，获得图元的默认边界大小。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.IconText">
            <summary>
            <para>定义与文本图元相关的属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconText.#ctor(CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>调用父类的构造函数进行初始化。</para>
            <para>前置条件：</para>
            <para>    rtu 不为空</para>
            <para>后置条件：</para>
            <para>    所有字段被赋予新值。</para>
            </summary>
            <param name="rtu">该ICON所属的RTU</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconText.InitializeAttribute(System.Collections.Generic.List{System.String})">
            <summary>
            <para>重写IIcon方法，根据输入参数初始化成员。</para>
            <para>前置条件：</para>
            <para>    attributeCollection 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="attributeCollection">从配置文件中读取出来的数据初始化字符串序列</param>
            <returns>
            <para>true：初始化成功</para>
            <para>false：初始化失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconText.Intersect(System.Drawing.Point)">
            <summary>
            <para>重写IIcon方法，判断输入点是否位于图元的所在区域内。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="point">输入点</param>
            <returns>
            <para>true：输入点位于图元的所在区域内</para>
            <para>false：输入点没有位于图元的所在区域内</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconText.ResetStatus">
            <summary>
            <para>重写IIcon方法，重置文本图元状态，若为可写文本图元，则清空并隐藏。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconText.DrawIcon(System.Drawing.Graphics)">
            <summary>
            <para>重写IIcon方法，绘制图元。</para>
            <para>前置条件：</para>
            <para>    cGraphics cRect 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">封装一个GDI+绘图图面</param>
            <param name="cRect">绘制范围</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconText.CalculateLocation(System.Drawing.PointF@,System.Drawing.SizeF,System.Drawing.SizeF)">
            <summary>
            <para>根据文本在矩形边框中的水平分布和垂直分布属性，计算文本的实际位置。</para>
            <para>前置条件：</para>
            <para>    attributeCollection的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="position">文本的左上角坐标</param>
            <param name="boundSize">文本图元的矩形边框的边界</param>
            <param name="valueSize">文本的边界</param>
            <returns>
            <para>position被赋予新值。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconText.UpdateCrc">
            <summary>
            <para>计算文本图元CRC，以便用于判断文本图元显示文字是否发生预期外修改</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconText.IllegalAlterExist(System.UInt16@)">
            <summary>
            <para>判断文本图元显示文字是否发生预期外修改</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="crcValue">当前文本图元显示文字的CRC校验值</param>
            <returns>
            <para>正确判断文本图元显示文字是否发生预期外修改</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_crc">
            <summary>
            <para>文本的CRC</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_position">
            <summary>
            <para>文本图元所在矩形框的左上角坐标。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_width">
            <summary>
            <para>文本图元所在矩形框的宽</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_height">
            <summary>
            <para>文本图元所在矩形框的高</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_value">
            <summary>
            <para>文本内容</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_enable">
            <summary>
            <para>文本是否可在运行中被修改</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_vAlignment">
            <summary>
            <para>文本在矩形框中的垂直分布</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_hAlignment">
            <summary>
            <para>文本在矩形框中的水平分布</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_fontIndex">
            <summary>
            <para>文本所属样式，该值为字体库的索引。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconText.m_fontDefaultSize">
            <summary>
            <para>文本默认大小。单位为磅值。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconText.IsSame(CSR.CUIT.Model.Tde.Icon.IconText)">
            <summary>
            <para>判断当前文本图元对象与指定的文本图元对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定文本图元对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IconText.Text">
            <summary>
            <para>获得或设置图元的文本。只有当文本可以修改时（m_enable）才可以对图元的文本进行设置。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IconText.DefaultBoundsRect">
            <summary>
            <para>重写IIcon属性，获得图元的默认边界大小。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.DeviceStation">
            <summary>
            <para>定义与车站相关的属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceStation.#ctor(CSR.CUIT.Model.Tde.Logic.Sta)">
            <summary>
            <para>初始化字段，并调用父类的构造函数。</para>
            <para>前置条件：</para>
            <para>    device 不为空</para>
            <para>后置条件：</para>
            <para>    字段m_sta被赋值为device指向的对象。</para>
            </summary>
            <param name="device">Sta对象。</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceStation.GetControlCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备输出码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="controlType">码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceStation.GetIndicationCode(System.UInt16)">
            <summary>
            <para>获得设备表示码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="inputtype">表示码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceStation.m_sta">
            <summary>
            <para>站场图基础数据文件中读取的车站结构体</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceStation.Device">
            <summary>
            <para>获取基础数据中车站设备数据。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceStation.Name">
            <summary>
            <para>实现IDevice的抽象属性，获得设备名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceStation.StationID">
            <summary>
            <para>获取车站编号</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceStation.Station">
            <summary>
            <para>实现IDevice的抽象属性，获得设备所属的车站对象。</para>
            <para>由于本类即是车站类，因此本属性返回当前实例this。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceStation.DeviceType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceStation.DeviceSubType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceStation.DeviceHandle">
            <summary>
            <para>实现IDevice的抽象属性，获得设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.DeviceTrain">
            <summary>
            <para>定义与列车相关的属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrain.GetTrainRefWindow">
            <summary>
            <para>获得列车关联的车次窗</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>字段m_deviceWindow</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrain.SetTrainRefWindow(CSR.CUIT.Model.Tde.Device.DeviceWindow)">
            <summary>
            <para>建立列车和车次窗的相互关联关系（一个列车只能对应一个车次窗，一个车次窗可以对应多个列车）</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>true：设置成功</para>
            <para>false：设置失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrain.GetBitStatus(System.UInt16)">
            <summary>
             获取码位状态
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrain.GetTrainIdPartOne">
            <summary>
            <para>获得列车车组/车次号</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>列车车组/车次号</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2014-01-10  修改显示方案</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrain.GetTrainIdPartTwo">
            <summary>
            <para>获得列车目的地号/表号</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>列车目的地号/表号</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2014-01-10  修改显示方案</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrain.SetTrainMode(System.UInt32)">
            <summary>
            <para>设置列车运行状态码位表</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="trainMode">运行状态码位表</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-10  修复BUG185</para>
            <para> 蒋湘宁 2013-12-13  修复BUG185</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrain.ClearTrainMode">
            <summary>
            <para>清空列车码位表</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DeviceTrain.CompareTo(CSR.CUIT.Model.Tde.Device.DeviceTrain)">
            <summary>
            <para>实现IComparable接口</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">比较对象</param>
            <returns>
            <para>比较结果</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrain.m_deviceWindow">
            <summary>
            <para>列车关联的车次窗对象</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrain.m_strGroupId">
            <summary>
            <para>车组号</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrain.m_strGlobalID">
            <summary>
            <para>车次号</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrain.m_strDest">
            <summary>
            <para>目的地号</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrain.m_strTableId">
            <summary>
            <para>表号</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrain.m_nOffset">
            <summary>
            <para>早晚点</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrain.m_nAssDevType">
            <summary>
            <para>关联的设备类型</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrain.m_nAssDevHandle">
            <summary>
            <para>关联的设备句柄</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DeviceTrain.m_trainMode">
            <summary>
            <para>列车当前运行码位表</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.GroupId">
            <summary>
            <para>获得或设置车组号。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.TableId">
            <summary>
            <para>获得或设置表号。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.DestNo">
            <summary>
            <para>获得或设置目的地号。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.GlobalID">
            <summary>
            <para>获得或设置车次号。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.WindowOffset">
            <summary>
            <para>获得或设置车次窗偏移（当一个车次窗关联多个列车时，即车次窗重叠，当前列车在所关联车次窗中的索引）。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.TimeOffset">
            <summary>
            <para>获得或设置早晚点。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.AssDevType">
            <summary>
            <para>获得或设置关联的设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.AssDeviceHandle">
            <summary>
            <para>获得或设置关联的设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.RunDirection">
            <summary>
            列车运行方向
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DeviceTrain.TrainMode">
            <summary>
            <para>获得列车运行码位表。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Device.DevicePlatform">
            <summary>
            <para>定义与站台相关的属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DevicePlatform.#ctor(CSR.CUIT.Model.Tde.Logic.Platform)">
            <summary>
            <para>初始化字段，并调用父类的构造函数。</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证。</para>
            <para>后置条件：</para>
            <para>    字段m_platform被赋值为device指向的对象。</para>
            </summary>
            <param name="device">Platform对象。</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DevicePlatform.GetControlCode(System.UInt16)">
            <summary>
            <para>实现IDevice的抽象方法，获得设备输出码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="controlType">码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DevicePlatform.GetIndicationCode(System.UInt16)">
            <summary>
            <para>获得设备表示码位中指定码位类型的句柄</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="inputtype">表示码位类型</param>
            <returns>
            <para>指定码位类型的句柄</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Device.DevicePlatform.ResetStatus">
            <summary>
            <para>重置状态</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    无</para>
            </summary>
            <returns>
            <para></para>
            </returns>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DevicePlatform.m_hold">
            <summary>
            <para>站台扣车，1表示有效，0无效</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DevicePlatform.m_termDwell">
            <summary>
            <para>站台上行提前发车，1表示有效，0无效。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DevicePlatform.m_platform">
            <summary>
            <para>站场图基础数据文件中读取的站台结构体</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DevicePlatform.m_nDwell">
            <summary>
            <para>停站时间(秒)</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DevicePlatform.m_nDwellType">
            <summary>
            <para>停站时间类型:1表示有效，0无效</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DevicePlatform.m_nPl">
            <summary>
            <para>运行等级 </para>
            <para>取值0：自动。</para>
            <para>取值1：运行等级1。</para>
            <para>取值2：运行等级2。</para>
            <para>取值3：运行等级3。</para>
            <para>取值4：运行等级4。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DevicePlatform.m_nPLType">
            <summary>
            <para>运行等级类型:1表示有效，0无效</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DevicePlatform.m_nAutoSleepMode">
            <summary>
            <para>自动休眠模式。</para>
            <para>该数据项不做处理，作为预留。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Device.DevicePlatform.m_nAutoSleepDelay">
            <summary>
            <para>自动休眠延迟。</para>
            <para>该数据项不做处理，作为预留。</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.Device">
            <summary>
            <para>获取基础数据中站台设备数据。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.AssociateTrack">
            <summary>
            <para>获得站台关联的逻辑轨道对象</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.Name">
            <summary>
            <para>实现IDevice的抽象属性，获得设备名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.Station">
            <summary>
            <para>实现IDevice的抽象属性，获得设备所属的车站对象。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.Hold">
            <summary>
            是否扣车
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.TermDwell">
            <summary>
            <para>获得和设置站台提前发车。1表示有效，0表示无效。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.SkipStop">
            <summary>
            标识命令是设置跳停还是取消跳停。1：设置跳停；0：取消跳停
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.Dwell">
            <summary>
            <para>人工设置的站停时间。0：自动设置。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.DwellType">
            <summary>
            <para>人工设置站停时间类型，该数据项不做处理，作为预留。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.PL">
            <summary>
            <para>人工设置的运行等级。0：自动设置。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.PLType">
            <summary>
            人工设置运行等级类型，该数据项不做处理，作为预留。
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.AutoSleepMode">
            <summary>
            <para>获得和设置站台自动休眠模式。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.AutoSleepDelay">
            <summary>
            <para>获得和设置站台自动休眠延迟。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.DeviceType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.DeviceSubType">
            <summary>
            <para>实现IDevice的抽象属性，获得设备子类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Device.DevicePlatform.DeviceHandle">
            <summary>
            <para>实现IDevice的抽象属性，获得设备句柄。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Movement">
            <summary>
            <para>封装对绘图元素点和矩形的位移操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Movement.#ctor">
            <summary>
            <para>初始化字段m_nXMovement和m_nYMovement为0</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    字段m_nXMovement和m_nYMovement被初始化为0</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Movement.LPtoDP(System.Drawing.Point[]@)">
            <summary>
            <para>批量修改点的位置。</para>
            <para>前置条件：</para>
            <para>    rgPoints 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="rgPoints">需要修改位置的点的集合</param>
            <returns>
            <para>输入参数rgPoints被修改</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Movement.LPtoDP(System.Drawing.PointF[]@)">
            <summary>
            <para>批量修改点的位置。</para>
            <para>前置条件：</para>
            <para>    rgPoints 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="rgPoints">需要修改位置的点的集合</param>
            <returns>
            <para>输入参数rgPoints被修改</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Movement.LPtoDP(System.Drawing.Point@)">
            <summary>
            <para>修改单点的位置。将point点右移nXMovement，下移nYMovement。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="point">需要修改位置的点</param>
            <returns>
            <para>输入参数point被修改。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Movement.LPtoDP(System.Drawing.PointF@)">
            <summary>
            <para>修改单点的位置。将point点右移nXMovement，下移nYMovement。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="point">需要修改位置的点</param>
            <returns>
            <para>输入参数point被修改。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Movement.LPtoDP(System.Drawing.Rectangle@)">
            <summary>
            <para>修改矩形框的位置。将lpRect右移nXMovement，下移nYMovement。</para>
            <para>前置条件：</para>
            <para>    lpRect 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="lpRect">需要修改位置的矩形框</param>
            <returns>
            <para>输入参数lpRect被修改</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Movement.m_nXMovement">
            <summary>
            <para>延X轴偏移量。正数为向右偏移，负数为向坐偏移。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Movement.m_nYMovement">
            <summary>
            <para>延Y轴偏移量。正数为向下偏移，负数为向上偏移。</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Movement.XMovement">
            <summary>
            <para>设置和返回延X轴偏移量</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Movement.YMovement">
            <summary>
            <para>设置和返回延Y轴偏移量</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenu.DefaultAlignment">
            <summary>
            <para>字体对齐方式</para>
            <para>默认为左对齐</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenu.DefaultColor">
            <summary>
            <para>字体颜色</para>
            <para>默认为黑色</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenu.DefaultFont">
            <summary>
            <para>字体样式</para>
            <para>默认为null</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenu.DefaultBackColor">
            <summary>
            <para>背景色</para>
            <para>默认为SystemColors.Control</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenu.m_ContextMenuTrip">
            <summary>
            <para>菜单对象</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.PopupMenu.m_popupType">
            <summary>
            <para>菜单弹出类型，默认为右键弹出。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenu.#ctor(CSR.CUIT.GlobalService.ShareLib.EmPopupType)">
            <summary>
            <para>根据输入参数初始化字段。</para>
            </summary>
            <param name="popupType">菜单弹出类型</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenu.InitCommandEvent(CSR.CUIT.Model.InitMenuItemCommandCallback)">
            <summary>
            <para>为下属菜单项设置菜单项被点击时，执行的操作方法。</para>
            </summary>
            <param name="menuItemClickArgs">委托的实现。用于点击菜单项时，进行的操作。</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenu.AddMenuItem(CSR.CUIT.Model.PopupMenuItem)">
            <summary>
            <para>将新的菜单项加入菜单。</para>
            <para>前置条件：item 不为空</para>
            </summary>
            <param name="item">待加入的菜单项</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenu.GetContextMenu(CSR.CUIT.GlobalService.ShareLib.EmRole,CSR.CUIT.Model.GetStatusCallback)">
            <summary>
            <para>获得菜单对象。</para>
            </summary>
            <param name="role">用户角色</param>
            <param name="GetStatus">委托的实现。用于根据码位获取最新状态。</param>
            <returns>
            <para>菜单对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.PopupMenu.RefreshMenuDisplay(CSR.CUIT.GlobalService.ShareLib.EmRole,CSR.CUIT.Model.GetStatusCallback)">
            <summary>
            <para>设置菜单项被点击时，执行的操作方法。</para>
            <para>前置条件：m_ContextMenuTrip != null</para>
            </summary>
            <param name="role">用户角色</param>
            <param name="GetStatus">委托的实现。用于根据码位获取最新状态。</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.PopupMenu.PopupMode">
            <summary>
            <para>获得当前菜单的弹出类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.IReceiver">
            <summary>
            <para>定义一个更新接口，在ISender对象发生变化时，可通过此更新接口，让实现IReceiver的对象更新自身状态。</para>
            <para>说明详见 7.1.1 需要维护命令对话框与站场图操作的一致性</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.TsrAtsTsrStatusBodyMsg.speed">
            <summary>
            <para>限速值</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.CheckBitmap(CSR.CUIT.Model.Tde.RtuGroup)">
            <summary>
            <para>校验站场图中所有轨道和道岔的TSR状态与TSR消息中记录的TSR状态是否一致</para>
            <para>如果一致说明TSRDriver对TSR_ATS_TSR_STATUS_MSG消息的转换正确，否则错误</para>
            </summary>
            <param name="cRtuGroup">站场图模型</param>
            <returns>TSR状态是否转换正确</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.InitCheckBlockResult(CSR.CUIT.Model.Tde.RtuGroup,CSR.CUIT.Model.Tde.TsrAtsTsrStatusMsg,System.Collections.Generic.Dictionary{CSR.CUIT.Model.Tde.Block,CSR.CUIT.Model.Tde.CheckBlockResult}@)">
            <summary>
            初始化检查结果：1.初始化检查项(TSR中的所有逻辑区段和道岔）；2.将所有检查项的检查结果置位不通过
            </summary>
            <param name="cRtuGroup">站场图模型</param>
            <param name="cTsrMsg">临时限速状态消息</param>
            <param name="rgResult">检查结果</param>
            <returns>是否成功初始化，如果消息内容错误或基础数据错误，可能导致检查结果无法成功初始化</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.InitStartDeviceResult(CSR.CUIT.Model.Tde.Device.IDevice,CSR.CUIT.Model.Tde.TsrAtsTsrStatusBodyMsg,System.Collections.Generic.Dictionary{CSR.CUIT.Model.Tde.Block,CSR.CUIT.Model.Tde.CheckBlockResult}@,CSR.CUIT.Model.Tde.Device.EmDeviceDirection)">
            <summary>
            初始化起点设备或终点设备的检查结果：1.初始化检查项(TSR中的起点设备和终点设备的所有逻辑区段和道岔）；2.将所有检查项的检查结果置位不通过
            </summary>
            <param name="cStartOrEndDevice">起点设备或终点设备</param>
            <param name="cTsrAtsTsrStatusBodyMsg">某个临时限速消息</param>
            <param name="rgResult">检查结果</param>
            <param name="dirTsr">TSR方向</param>
            <returns>是否成功初始化，如果消息内容错误或基础数据错误，可能导致检查结果无法成功初始化</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.InitStartOrEndTrackResult(CSR.CUIT.Model.Tde.Device.DeviceTrack,CSR.CUIT.Model.Tde.Device.EmDeviceDirection,System.Collections.Generic.Dictionary{CSR.CUIT.Model.Tde.Block,CSR.CUIT.Model.Tde.CheckBlockResult}@,CSR.CUIT.Model.Tde.TsrAtsTsrStatusBodyMsg)">
            <summary>
            初始化起点轨道或终点轨道的检查结果
            </summary>
            <param name="cStartOrEndTrack">起点轨道或终点轨道</param>
            <param name="dirTsr">TSR方向</param>
            <param name="rgResult">检查结果</param>
            <param name="cTsrAtsTsrStatusBodyMsg">某个临时限速消息</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            <para> 黎邓根 2013-12-18  增加上行方向起点公里标比较为相等的情况</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.CheckSpeed(CSR.CUIT.Model.Tde.RtuGroup)">
            <summary>
            <para>校验站场图中所有轨道和道岔的TSR限速与TSR消息中记录的TSR限速是否一致</para>
            <para>如果一致说明TSRDriver对TSR_ATS_TSR_STATUS_MSG消息的转换正确，否则错误</para>
            </summary>
            <param name="cRtuGroup">站场图模型</param>
            <returns>TSR限速是否一致</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.CheckTracksSpeed(CSR.CUIT.Model.Tde.RtuGroup,System.Collections.Generic.Dictionary{System.UInt16,CSR.CUIT.Model.Tde.CheckSpeedResult}@)">
            <summary>
            检查轨道限速与实际是否一致
            </summary>
            <param name="cRtuGroup">站场图模型</param>
            <param name="rgResult">检查结果</param>
            <returns>是否一致</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.CheckSwitchsSpeed(CSR.CUIT.Model.Tde.RtuGroup,System.Collections.Generic.Dictionary{System.UInt16,CSR.CUIT.Model.Tde.CheckSpeedResult}@)">
            <summary>
            检查道岔限速与实际是否一致
            </summary>
            <param name="cRtuGroup">站场图模型</param>
            <param name="rgResult">检查结果</param>
            <returns>是否一致</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.CheckSwitchSpeedText(CSR.CUIT.Model.Tde.Device.DeviceSwitch,System.UInt16,CSR.CUIT.Model.Tde.EmIconSubType,System.Collections.Generic.Dictionary{System.UInt16,CSR.CUIT.Model.Tde.CheckSpeedResult}@)">
            <summary>
            检查指定的道岔指定部分(岔前、定位或反位）的限速与实际是否一致
            </summary>
            <param name="cSwitch">指定的道岔设备</param>
            <param name="usBlockID">道岔指定部分的BLOCKID</param>
            <param name="emIconSubType">道岔指定部分的类型</param>
            <param name="rgResult">检查结果</param>
            <returns>是否一致</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.CheckTracksBlock(CSR.CUIT.Model.Tde.RtuGroup,System.Collections.Generic.Dictionary{CSR.CUIT.Model.Tde.Block,CSR.CUIT.Model.Tde.CheckBlockResult}@)">
            <summary>
            检查轨道的TSR状态是否与实际一致
            </summary>
            <param name="cRtuGroup">站场图模型</param>
            <param name="rgResult">检查结果</param>
            <returns>是否一致</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.TSRProtocolChecker.CheckSwitchsBlock(CSR.CUIT.Model.Tde.RtuGroup,System.Collections.Generic.Dictionary{CSR.CUIT.Model.Tde.Block,CSR.CUIT.Model.Tde.CheckBlockResult}@)">
            <summary>
            检查道岔的TSR状态是否与实际一致
            </summary>
            <param name="cRtuGroup">站场图模型</param>
            <param name="rgResult">检查结果</param>
            <returns>是否一致</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建方法</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.BitmapUpdateItem">
            <summary>
            <para>码位表更新项。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.BitmapUpdateItem.#ctor(System.Byte,System.UInt16,System.Boolean)">
            <summary>
            <para>根据输入参数初始化成员</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    所有属性被初始化</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.BitmapUpdateItem.RtuId">
            <summary>
            <para>获得和设置码位表所属的设备集中站索引。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.BitmapUpdateItem.Handle">
            <summary>
            <para>获得和设置码位表的码位索引。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.BitmapUpdateItem.Status">
            <summary>
            <para>获得和设置码位对应的状态。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.RtuGroup">
            <summary>
            <para>定义与设备集中站集合相关的属性和操作。</para>
            </summary>
        </member>
        <member name="T:CSR.CUIT.Model.IBaseModel">
            <summary>
            <para>定义注册、注销、刷新视图的方法。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.IBaseModel.RegisterView(CSR.CUIT.Model.IBaseView)">
            <summary>
            <para>注册视图。</para>
            <para>有关视图的说明详见《CUIT软件内部组件设计规范——安全部分》附录A.1 观察者模式。</para>
            <para>前置条件：</para>
            <para>    cBaseView 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cBaseView">视图对象。</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.IBaseModel.UnRegisterView(CSR.CUIT.Model.IBaseView)">
            <summary>
            <para>注销视图。</para>
            <para>有关视图的说明详见《CUIT软件内部组件设计规范——安全部分》附录A.1 观察者模式。</para>
            <para>前置条件：</para>
            <para>    cBaseView 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cBaseView">视图对象。</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.IBaseModel.UpdateAllView">
            <summary>
            <para>刷新所有视图的指定区域，有关视图的说明详见《CUIT软件内部组件设计规范——安全部分》附录A.1 观察者模式。</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.IBaseModel.UpdateAllView(System.Drawing.Rectangle)">
            <summary>
            <para>刷新所有视图，有关视图的说明详见《CUIT软件内部组件设计规范——安全部分》附录A.1 观察者模式。</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.IBaseModel.m_ViewCollection">
            <summary>
            <para>已注册的视图列表</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.IBaseModel.ViewCollection">
            <summary>
            <para>获取当前已注册的所有视图</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.TLE_DESCRIPTION_SIZE">
            <summary>
            <para>基础数据中数据描述符的字节数</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.#ctor(System.Byte,System.Byte[])">
            <summary>
            <para>初始化字段，开始计时器。</para>
            <para>后置条件：</para>
            <para>    字段m_byDeportRtuID、m_rgDisplayOrderedRtu被输入参数初始化</para>
            <para>    m_nFlashTimer启动，时间间隔为m_nInterval</para>
            </summary>
            <param name="byDeportRtuID">车辆段Rtu的Id</param>
            <param name="rgDisplayOrderedRtu">需要在站场图上显示的Rtu的Id列表</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <!-- 对于成员“M:CSR.CUIT.Model.Tde.RtuGroup.CalcHeightestContainDeport”忽略有格式错误的 XML 注释 -->
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.CalcHeightestNotContainDeport">
            <summary>
            <para>计算不包含车辆段的站场图的高度</para>
            <para>前置条件：</para>
            <para>    m_RtuCollection!=null</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>返回（像素）</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.FlashIconTimer(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            <para>计时器的执行方法体。实现图元的闪烁。</para>
            <para>前置条件：无</para>
            <para>后置条件：</para>
            <para>    m_bFlashState更新为!m_bFlashState</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.IsDeportDonotDisplayInMutiline">
            <summary>
            <para>车辆段是否显示在多行中的某一行</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证。</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>true：车辆段显示在多行中</para>
            <para>false：车辆段不显示在多行中</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.ReadDescription(System.IO.BinaryReader@,System.String)">
            <summary>
            <para>读取信号设备数据文件中的描述部分</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证。</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cBinaryReader">二进制数据流</param>
            <param name="sDescription">描述文本</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.ResetStatus">
            <summary>
            <para>重置站场状态</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.AddRtu(CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>将参数rtu加入m_RtuCollection列表</para>
            <para>前置条件：</para>
            <para>    rtu 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="rtu">需要添加进m_RtuCollection列表的对象</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.AddFlashIcon(CSR.CUIT.Model.Tde.Icon.IIcon)">
            <summary>
            <para>增加需要闪烁的图元对象</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证。</para>
            <para>后置条件：无</para>
            </summary>
            <param name="pIcon">新增图元</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.RemoveFlashIcon(CSR.CUIT.Model.Tde.Icon.IIcon)">
            <summary>
            <para>删除指定的闪烁图元对象</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证。</para>
            <para>后置条件：无</para>
            </summary>
            <param name="pIcon">新增图元</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.InitBitMap(System.Byte,System.Byte[],CSR.CUIT.Model.Tde.EmUpdateBitmapType)">
            <summary>
            <para>初始化指定设备集中站的状态码位表，并刷新站场图显示。</para>
            <para>前置条件：bitmapBuff != null</para>
            <para>后置条件：无</para>
            </summary>
            <param name="rtuId">设备集中站</param>
            <param name="bitmapBuff">设备集中站码位表</param>
            <param name="type">待更新的码位类型</param>
            <returns>true：初始化成功；false：初始化失败</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-12-31  增加初始化码位表时的分类处理</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.UpdateBitMap(CSR.CUIT.Model.Tde.BitmapUpdateItem)">
            <summary>
            <para>更新状态码位表，并刷新站场图显示。</para>
            <para>前置条件：无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="rtuId">设备集中站</param>
            <param name="handle">码位句柄</param>
            <param name="status">码位状态</param>
            <returns>true：更新成功；false：更新失败</returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.UpdateBitMap(System.Collections.Generic.List{CSR.CUIT.Model.Tde.BitmapUpdateItem})">
            <summary>
            <para>更新状态码位表，并刷新站场图显示。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="itemList">待更新的码位表列表</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.ResetBitMap(CSR.CUIT.Model.Tde.EmUpdateBitmapType)">
            <summary>
            <para>重置所有设备集中站的码位表，并刷新站场图显示</para>
            </summary>
            <param name="type">待更新的码位类型</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2014-01-08  在重置码位表前增加判断“码位表不为空”</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.UpdateTsrSpeedIcon(System.Byte,CSR.CUIT.Model.Tde.Logic.DeviceIndex,CSR.CUIT.Model.Tde.EmIconSubType,System.Byte,System.Boolean)">
            <summary>
            <para>更新临时限速速度图元。</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="rtuId">设备集中站</param>
            <param name="deviceIndex">关联的设备类型和设备句柄</param>
            <param name="iconType">关联的图元子类型</param>
            <param name="speed">临时限速速度</param>
            <param name="status">显示状态</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.UpdatePlatformDisplay(CSR.CUIT.Model.Tde.Device.DevicePlatform)">
            <summary>
            <para>更新指定站台显示。</para>
            <para>前置条件：platform!=NULL</para>
            <para>后置条件：无</para>
            </summary>
            <param name="platform">待更新显示的站台设备</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.UpdateTrain(CSR.CUIT.Model.Tde.Device.DeviceWindow)">
            <summary>
            <para>更新指定车次窗的显示。</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="window">待更新显示的车次窗</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.ClearTrain">
            <summary>
            <para>清除当前所有列车。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.CreateDeviceTrain(System.String,System.Boolean)">
            <summary>
            <para>创建列车。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="groupId">车组号</param>
            <param name="bOpenAlways">指示若没有找到列车，则进行创建。</param>
            <returns>
            <para>列车对象</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.DeleteRunningTrain(System.String)">
            <summary>
            <para>删除指定列车。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="trainNum">车组号</param>
            <returns>
            <para>true：删除成功</para>
            <para>false：删除失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.GetRtu(System.Int32)">
            <summary>
            <para>根据Rtu的ID获取Rtu对象。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="rtu_id">站场图基础数据中提供的设备集中站的ID。</param>
            <returns>
            <para>获取成功：返回非空Rtu对象</para>
            <para>获取失败：返回空</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.GetStation(System.Byte)">
            <summary>
            <para>获取指定车站编号的车站设备</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="station">车站编号</param>
            <returns>
            <para>返回指定车站编号的车站设备</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.SetZoomMode(CSR.CUIT.GlobalService.ShareLib.EmZoomMode)">
            <summary>
            <para>显示站场图的显示模式。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            <para> 蒋湘宁 2013-01-03  变更名称</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.HitTest(System.Drawing.Point)">
            <summary>
            <para>获取鼠标下的图元对象。</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证。</para>
            <para>后置条件：无</para>
            </summary>
            <param name="pt">鼠标的位置</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.HitTest(System.Int32,System.Int32)">
            <summary>
            <para>获取鼠标下的图元对象。</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证。</para>
            <para>后置条件：无</para>
            </summary>
            <param name="x">鼠标的坐标</param>
            <param name="y">鼠标的坐标</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.LoadTde(System.String)">
            <summary>
            <para>读取数据文件，初始化信号设备模型</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="filename">文件路径</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.LoadTdeIcon(System.String)">
            <summary>
            <para>读取XML数据文件，初始化FontLib，ColorLib，ICON和ICON的LogicTable</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="filename">文件路径</param>
            <returns>
            <para>true:初始化成功；false：初始化失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.LoadControlTable(System.String)">
            <summary>
            读取配置文件，初始化控制表
            </summary>
            <param name="filename"></param>
            <returns></returns>
            <remarks>
            <para> 蒋湘宁 2013-12-21  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.LoadIndicationTable(System.String)">
            <summary>
            读取配置文件，初始化输入码位名称类型对照表
            </summary>
            <param name="filename"></param>
            <returns></returns>
            <remarks>
            <para> 蒋湘宁 2013-12-21  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.ResetTsrSpeedStatus">
            <summary>
            清空临时限速速度显示
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.RestoreToDefaultView">
            <summary>
            <para>显示站场图的默认显示。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.ShowHideDeviceText(CSR.CUIT.Model.Tde.EmIconSubType,System.Boolean)">
            <summary>
            <para>设置站场图上指定内容的显示/隐藏</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="type">指定图元类型</param>
            <param name="show">指定图元显示/隐藏</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.ShowTrainWindow(System.Boolean,System.Int32)">
            <summary>
            <para>设置站场图上车次窗的显示/隐藏</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="show">设置车次窗显示/隐藏</param>
            <param name="type">设置类型</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.ZoomDelta(System.Double,System.Double)">
            <summary>
            <para>缩放站场图（增加指定缩放偏移）</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="fHZoomDelta">横坐标缩放比例增加值</param>
            <param name="fVZoomDelta">纵坐标缩放比例增加值</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.Zoom(System.Double,System.Double)">
            <summary>
            <para>设置站场图缩放比例</para>
            </summary>
            <param name="fHZoom">横坐标缩放比例</param>
            <param name="fVZoom">纵坐标缩放比例</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.IllegalAlterExist(System.UInt16@)">
            <summary>
            <para>判断是否存在某个或某几个集中站码位表被非法修改（预期外修改）</para>
            <para>前置条件：</para>
            <para>    m_RtuCollection != null</para>
            <para>后置条件：无</para>
            </summary>
            <param name="crcValue">被非法修改的第一个码位表的CRC值</param>
            <returns>
            <para>正确处理返回值，且返回非法修改的第一个码位表的CRC值。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.IllegalSpeedAlterExist(System.UInt16@)">
            <summary>
            <para>判断是否存在临时限速速度文本图标显示速度值被非法修改（预期外修改）</para>
            <para>前置条件：</para>
            <para>    m_RtuCollection != null</para>
            <para>后置条件：无</para>
            </summary>
            <param name="crcValue">被非法修改的第一个临时限速速度文本图标的CRC值</param>
            <returns>
            <para>正确处理返回值，且返回非法修改的第一个临时限速速度文本图标的CRC值。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            <para>实现IDraw接口，绘制站场图。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">绘图图面</param>
            <param name="cRect">绘制范围</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.UpdateAllView">
            <summary>
            <para>实现父类IBaseModel的抽象方法。</para>
            <para>调用UpdateAllView(Rectangle cRect)方法更新整张视图，更新区域为整张站场图的大小。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.UpdateAllView(System.Drawing.Rectangle)">
            <summary>
            <para>实现父类IBaseModel的抽象方法。更新视图的指定区域。</para>
            <para>前置条件：</para>
            <para>    cRect 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cRect">视图的更新区域。</param>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_nInterval">
            <summary>
            <para>定时器刷新周期</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_bAlive">
            <summary>
            <para>是否激活</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_bDisplayDeport">
            <summary>
            <para>是否显示车辆段</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_bEnableUpdate">
            <summary>
            <para>指示视图是否可更新。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_bFlashState">
            <summary>
            <para>是否闪烁</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_systemMode">
            <summary>
            <para>系统模式</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_byDeportRtuID">
            <summary>
            <para>车辆段集中站编号</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_rgDisplayOrderedRtu">
            <summary>
            <para>集中站显示顺序</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_rgDisplayRtu">
            <summary>
            <para>需要显示的集中站集合</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_DefaultBoundsRect">
            <summary>
            <para>表示站场图的原始边界</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_nFlashTimer">
            <summary>
            <para>闪烁显示需要的定时器</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_RunningTrain">
            <summary>
            <para>所有在线列车信息</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_FlashIconCollection">
            <summary>
            <para>所有需要闪烁显示的图标</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_RtuCollection">
            <summary>
            <para>所有设备集中站列表</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_windowIconMappingList">
            <summary>
            <para>车次窗图标与车次窗设备映射表</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_cLastTsrMsg">
            <summary>
            <para>最新的TSR信息</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_ColorLib">
            <summary>
            <para>颜色库</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_FontLib">
            <summary>
            <para>字体库</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.RtuGroup.m_popupMenuLib">
            <summary>
            <para>弹出菜单</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.GetNonDefaultAbs(System.Int32,System.Int32)">
            <summary>
            比较startAbs和endAbs，返回非-1的那个
            </summary>
            <param name="startAbs"></param>
            <param name="endAbs"></param>
            <returns></returns>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.UpdateIconByBlock(CSR.CUIT.Model.Tde.Block)">
            <summary>
            根据Block找到对应设备，再找到对应Icon，更新Icon的startAbs和EndAbs
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.InitBlockList(System.Collections.Generic.List{CSR.CUIT.Model.Tde.Block})">
            <summary>
            初始化列车精确位置Block列表
            </summary>
            <param name="blockList"></param>
            <returns></returns>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.InitStartOrEndTrackResult(CSR.CUIT.Model.Tde.Device.DeviceTrack,CSR.CUIT.Model.Tde.Device.EmDeviceDirection)">
            <summary>
            初始化起点轨道或终点轨道的检查结果
            </summary>
            <param name="cStartOrEndTrack">起点轨道或终点轨道</param>
            <param name="dirTsr">方向</param>
            <param name="blockList">列车所占轨道列表</param>
            <remarks>
            <para> 蒋湘宁 2014-09-02  创建方法</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.Dispose">
            <summary>
            <para>实现IDisposable接口，释放计时器占用的资源。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.CheckTdeCRC(System.IO.BinaryReader)">
            <summary>
            <para>检查TDE基础数据是否被篡改或损坏</para>
            <para>前置条件：</para>
            <para>    输入参数的取值范围由调用者保证</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cBinaryReader">TDE文件二进制读取流对象</param>
            <returns>
            <para>返回（像素）</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.RtuGroup.IsSame(CSR.CUIT.Model.Tde.RtuGroup)">
            <summary>
            <para>判断设备集中站组对象与指定的设备集中站组对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定设备集中站组对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.FirstDisplayRtuID">
            <summary>
            <para>获取在站场图从左起第一个显示的Rtu的ID</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.LastTsrMsg">
            <summary>
            <para>获得或设置弹出菜单</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.Alive">
            <summary>
            <para>获得或设置所有集中站激活或未激活</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.DefaultBoundsRect">
            <summary>
            <para>获取站场图的原始边界</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.DisplayDeport">
            <summary>
            <para>获得或设置是否显示车辆段</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.EnableUpdateView">
            <summary>
            <para>设置视图是否可更新。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.FlashInterval">
            <summary>
            <para>获得或设置闪烁间隔。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.DisplayRtus">
            <summary>
            <para>获得或设置显示在站场图上的设备集中站ID列表。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.RtuCollection">
            <summary>
            <para>获得设备集中站对象列表。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.SysMode">
            <summary>
            <para>获得或设置当前的运行模式。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.ColorLib">
            <summary>
            <para>获得颜色库</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.FontLib">
            <summary>
            <para>获得字体库</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.WindowIconMapping">
            <summary>
            <para>获得车次窗ICON和车次窗设备的映射实例。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.RtuGroup.BoundsRect">
            <summary>
            <para>获取站场图的平移和缩放后的边界</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.IconPolygon">
            <summary>
            <para>定义与多边形图元相关的属性和操作。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconPolygon.#ctor(CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>调用父类的构造函数进行初始化。</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：</para>
            <para>    所有字段被赋予新值。</para>
            </summary>
            <param name="rtu">该ICON所属的RTU</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconPolygon.InitializeAttribute(System.Collections.Generic.List{System.String})">
            <summary>
            <para>重写IIcon方法，根据输入参数初始化成员。</para>
            <para>前置条件：</para>
            <para>    attributeCollection 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="attributeCollection">从配置文件中读取出来的数据初始化字符串序列</param>
            <returns>
            <para>true：初始化成功</para>
            <para>false：初始化失败</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconPolygon.Intersect(System.Drawing.Point)">
            <summary>
            <para>重写IIcon方法，判断输入点是否位于图元的所在区域内。</para>
            <para>前置条件：</para>
            <para>    point 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="point">输入点</param>
            <returns>
            <para>true：输入点位于图元的所在区域内</para>
            <para>false：输入点没有位于图元的所在区域内</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconPolygon.DrawIcon(System.Drawing.Graphics)">
            <summary>
            <para>重写IIcon方法，绘制图元。</para>
            <para>前置条件：</para>
            <para>    cGraphics 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="cGraphics">封装一个GDI+绘图图面</param>
            <returns>
            <para>无</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconPolygon.m_pathCollection">
            <summary>
            <para>组成多边形的所有路径的集合。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconPolygon.m_weight">
            <summary>
            <para>多边形的线宽。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.IconPolygon.m_fill">
            <summary>
            <para>多边形是否填充。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IconPolygon.IsSame(CSR.CUIT.Model.Tde.Icon.IconPolygon)">
            <summary>
            <para>判断当前多边形图元对象与指定的多边形图元对象是否相等</para>
            <para>前置条件：</para>
            <para>    无</para>
            <para>后置条件：无</para>
            </summary>
            <param name="other">指定多边形图元对象</param>
            <returns>
            <para>true:相等</para>
            <para>false:不相等</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.Tde.Icon.IconPolygon.DefaultBoundsRect">
            <summary>
            <para>重写IIcon属性，获得图元的默认边界大小。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.IPath">
            <summary>
            <para>定义路径的相关方法。</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IPath.AddPath(System.Drawing.Drawing2D.GraphicsPath@,CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>将路径经过平移、缩放后，添加进路径集合。</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.IPath.AddDefaultPath(System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            <para>将默认大小的路径添加进路径集合。</para>
            </summary>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.StraightLineInPolygon">
            <summary>
            <para>直线路径的相关方法。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.StraightLineInPolygon.m_beginPoint">
            <summary>
            <para>线段的起点。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.StraightLineInPolygon.m_endPoint">
            <summary>
            <para>线段的终点</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.StraightLineInPolygon.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            <para>根据输入参数初始化字段。</para>
            <para>前置条件：</para>
            <para>    beginPoint endPoint 不为空</para>
            <para>后置条件：</para>
            <para>    字段m_beginPoint、m_endPoint被赋予新值。</para>
            </summary>
            <param name="beginPoint">线段起点</param>
            <param name="endPoint">线段终点</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.StraightLineInPolygon.AddPath(System.Drawing.Drawing2D.GraphicsPath@,CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>重写IPath方法，将路径经过平移、缩放后，添加进路径集合。</para>
            <para>前置条件：</para>
            <para>    graphicsPath rtu 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="graphicsPath">路径集合</param>
            <param name="rtu">图元所在的设备集中站对象，提供图元的位移、缩放方法。</param>
            <returns>
            <para>经过平移、缩放后的路径被添加进路径集合graphicsPath。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.StraightLineInPolygon.AddDefaultPath(System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            <para>重写IPath方法，将默认大小的路径添加进路径集合。</para>
            <para>前置条件：</para>
            <para>    graphicsPath 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="graphicsPath">路径集合</param>
            <returns>
            <para>路径被添加进路径集合graphicsPath。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.BezierInPolygon">
            <summary>
            <para>贝塞尔曲线路径的相关方法。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.BezierInPolygon.m_point1">
            <summary>
            <para>构造曲线必需点1</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.BezierInPolygon.m_point2">
            <summary>
            <para>构造曲线必需点2</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.BezierInPolygon.m_point3">
            <summary>
            <para>构造曲线必需点3</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.BezierInPolygon.m_point4">
            <summary>
            <para>构造曲线必需点4</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.BezierInPolygon.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            <para>根据输入参数初始化字段。</para>
            <para>前置条件：</para>
            <para>    point1 point2 point3 point4 不为空</para>
            <para>后置条件：</para>
            <para>    字段m_point1、m_point2、m_point3、m_point4被赋予新值。</para>
            </summary>
            <param name="point1">构造曲线必需点1</param>
            <param name="point2">构造曲线必需点2</param>
            <param name="point3">构造曲线必需点3</param>
            <param name="point4">构造曲线必需点4</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.BezierInPolygon.AddPath(System.Drawing.Drawing2D.GraphicsPath@,CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>重写IPath方法，将路径经过平移、缩放后，添加进路径集合。</para>
            <para>前置条件：</para>
            <para>    graphicsPath rtu 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="graphicsPath">路径集合</param>
            <param name="rtu">图元所在的设备集中站对象，提供图元的位移、缩放方法。</param>
            <returns>
            <para>经过平移、缩放后的路径被添加进路径集合graphicsPath。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.BezierInPolygon.AddDefaultPath(System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            <para>重写IPath方法，将默认大小的路径添加进路径集合。</para>
            <para>前置条件：</para>
            <para>    graphicsPath 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="graphicsPath">路径集合</param>
            <returns>
            <para>路径被添加进路径集合graphicsPath。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.Tde.Icon.ArcInPolygon">
            <summary>
            <para>椭圆弧路径的相关方法。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.ArcInPolygon.m_rect">
            <summary>
            <para>表示从中截取弧线的椭圆的矩形边界。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.ArcInPolygon.m_startAngle">
            <summary>
            <para>弧线的起始角度，以度为单位从X轴顺时针测量。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.Tde.Icon.ArcInPolygon.m_sweepAngle">
            <summary>
            <para>startAngle 和弧线末尾之间的角度</para>
            </summary>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.ArcInPolygon.#ctor(System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            <para>根据输入参数初始化字段。</para>
            <para>前置条件：</para>
            <para>    rect 不为空</para>
            <para>后置条件：</para>
            <para>    字段m_rect、m_startAngle、m_sweepAngle被赋予新值。</para>
            </summary>
            <param name="rect">表示从中截取弧线的椭圆的矩形边界。</param>
            <param name="startAngle">弧线的起始角度，以度为单位从X轴顺时针测量。</param>
            <param name="sweepAngle">startAngle 和弧线末尾之间的角度</param>
            <returns>
            <para></para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.ArcInPolygon.AddPath(System.Drawing.Drawing2D.GraphicsPath@,CSR.CUIT.Model.Tde.Rtu)">
            <summary>
            <para>重写IPath方法，将路径经过平移、缩放后，添加进路径集合。</para>
            <para>前置条件：</para>
            <para>    graphicsPath rtu 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="graphicsPath">路径集合</param>
            <param name="rtu">图元所在的设备集中站对象，提供图元的位移、缩放方法。</param>
            <returns>
            <para>经过平移、缩放后的路径被添加进路径集合graphicsPath。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="M:CSR.CUIT.Model.Tde.Icon.ArcInPolygon.AddDefaultPath(System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            <para>重写IPath方法，将默认大小的路径添加进路径集合。</para>
            <para>前置条件：</para>
            <para>    graphicsPath 不为空</para>
            <para>后置条件：无</para>
            </summary>
            <param name="graphicsPath">路径集合</param>
            <returns>
            <para>路径被添加进路径集合graphicsPath。</para>
            </returns>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建函数</para>
            </remarks>
        </member>
        <member name="T:CSR.CUIT.Model.DialogInfo">
            <summary>
            <para>对话框的一些属性的集合，这些属性主要通过读取配置文件得到。</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.DialogInfo.m_menuItemName">
            <summary>
            <para>弹出对话框的菜单名称</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.DialogInfo.m_dialogName">
            <summary>
            <para>对话框名称</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.DialogInfo.m_associateDeviceType">
            <summary>
            <para>弹出对话框的菜单关联的设备类型</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.DialogInfo.m_associateDeviceName">
            <summary>
            <para>弹出对话框的菜单关联的设备名称</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.DialogInfo.m_cancelCodeType">
            <summary>
            <para>对话框关联命令的总取消码位类型</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.DialogInfo.m_controlCodeType">
            <summary>
            <para>对话框关联命令的控制码位类型</para>
            </summary>
        </member>
        <member name="F:CSR.CUIT.Model.DialogInfo.m_needConfirm">
            <summary>
            是否需要界面二次确认
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.NeedConfirm">
            <summary>
            是否需要界面二次确认
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.DllName">
            <summary>
            <para>对话框所在的动态链接库的名称。该值从配置文件读取。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.ClassName">
            <summary>
            <para>对话框所属的类的名称。该值从配置文件读取。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.Tag">
            <summary>
            <para>对话框的Tag属性。该值从配置文件读取。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            <para> 蒋湘宁 2013-12-27  修复BUG 347</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.AssociateDeviceType">
            <summary>
            <para>弹出对话框的菜单关联的设备的类型。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.AssociateDeviceName">
            <summary>
            <para>弹出对话框的菜单关联的设备的名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.CancelCodeType">
            <summary>
            <para>对话框关联命令的控制码位类型。该值从配置文件中读取。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.ControlCodeType">
            <summary>
            <para>控制码位</para>
            </summary>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.DialogName">
            <summary>
            <para>对话框名称。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
        <member name="P:CSR.CUIT.Model.DialogInfo.MenuItemName">
            <summary>
            <para>弹出对话框的菜单项名称。该值从配置文件中读取。</para>
            </summary>
            <remarks>
            <para> 蒋湘宁 2013-10-08  创建属性</para>
            </remarks>
        </member>
    </members>
</doc>
